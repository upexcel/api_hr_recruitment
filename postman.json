{
	"variables": [],
	"info": {
		"name": "hr_recruitment",
		"_postman_id": "1b283cae-a23f-29a5-03ee-a33e9107ca64",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1.User Registration",
			"description": "",
			"item": [
				{
					"name": "Login by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.token) {",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"    tests[\"token exist\"] = true;",
									"} else {",
									"    tests[\"token exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "123@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "remember_me",
									"value": "true",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"        postman.setEnvironmentVariable(\"userId\", jsonData.id);",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"    if (jsonData.password) {",
									"        tests[\"password exist\"] = true;",
									"    } else {",
									"        tests[\"password exist\"] = false;",
									"    }",
									"    if (jsonData.user_type) {",
									"        tests[\"type\"] = true;",
									"    } else {",
									"        tests[\"type\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"email\", \"test\" + Math.floor((Math.random() * 10000) + 1) + \"@gmail.com\");",
									"postman.setEnvironmentVariable(\"page\", 1);",
									"postman.setEnvironmentVariable(\"limit\", 10);"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/user/add_user?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"add_user"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "user_type",
									"value": "Admin",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text",
									"description": ""
								},
								{
									"key": "confirm_password",
									"value": "1234",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.token) {",
									"    postman.clearEnvironmentVariable(\"token\");",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"    postman.setEnvironmentVariable(\"type\", jsonData.role);",
									"    tests[\"token exist\"] = true;",
									"} else {",
									"    tests[\"token exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text"
								},
								{
									"key": "remember_me",
									"value": "true",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.status == true){",
									"    tests[\"token verify\"] = true;",
									"}else{",
									"    tests[\"token verify\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/verify?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"verify"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[responseBody] = true;",
									"if (jsonData.message) {",
									"    tests[\"Password Updated\"] = true;",
									"} else {",
									"    tests[\"Password Updated\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/account/update_password?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"account",
								"update_password"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "old_password",
									"value": "1234",
									"description": "",
									"type": "text"
								},
								{
									"key": "new_password",
									"value": "123",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Login test",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.token) {",
									"    postman.clearEnvironmentVariable(\"token\");",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"    postman.setEnvironmentVariable(\"type\", jsonData.role);",
									"    tests[\"token exist\"] = true;",
									"} else {",
									"    tests[\"token exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "remember_me",
									"value": "true",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.error) {",
									"    tests[\"Error message contains\"] = false",
									"} else {",
									"    tests[\"Error message contains\"] = true",
									"}",
									"if (jsonData.data) {",
									"    postman.setEnvironmentVariable(\"user_id\", jsonData.data[0].id);",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"",
									"        if (jsonData.data[i].email) {",
									"            tests[\"email exist \"+ i] = true;",
									"        } else {",
									"            tests['email exist '+ i] = false;",
									"        }",
									"    }",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/user/list/1/11?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"list",
								"1",
								"11"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "User Dashboard",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.day_wise.length){",
									"    if(jsonData.day_wise){",
									"    tests['day_wise data exist'] = true",
									"    if(jsonData.day_wise[0].label){",
									"        tests['data label exists'] = true",
									"    }else{",
									"      tests[' data label exists'] = false ",
									"    }",
									"      if(jsonData.day_wise[1].label){",
									"        tests['data label exists'] = true",
									"    }else{",
									"      tests[' data label exists'] = false ",
									"    }",
									"    ",
									"    if(jsonData.day_wise[0].dates){",
									"        tests['dates data exists'] = true",
									"    }else{",
									"      tests['dates data exists'] = false ",
									"    }",
									"      if(jsonData.day_wise[1].dates){",
									"        tests['dates data exists'] = true",
									"    }else{",
									"      tests['dates data exists'] = false ",
									"    }",
									"}else{",
									"    tests['day_wise data exist'] = false",
									"}",
									"",
									"",
									"if(jsonData.month_wise.length){",
									"    tests['month_wise data exists'] = true",
									"    if(jsonData.month_wise[0].label){",
									"    tests['month_wise label exists'] = true",
									"    }else{",
									"    tests['month_wise label exists'] = false",
									"    }",
									"    ",
									"    if(jsonData.month_wise[1].months){",
									"    tests['month_wise months exists'] = true",
									"    }else{",
									"    tests['month_wise months exists'] = false",
									"    }",
									"  }else{",
									"    tests['month_wise dtaa exists'] = false",
									"}",
									"",
									"if(jsonData.rounds.length){",
									"    tests['rounds data exists'] = true",
									"    if(jsonData.rounds[0].label){",
									"    tests['rounds label exists'] = true",
									"    }else{",
									"    tests['rounds label exists'] = false",
									"    }",
									"    ",
									"    if(jsonData.rounds[1].rounds){",
									"    tests['rounds rounds exists'] = true",
									"    }else{",
									"    tests['rounds rounds exists'] = false",
									"    }",
									"  }else{",
									"    tests['rounds data exists'] = false",
									"}",
									"",
									"if(jsonData.email_stat.length){",
									"    tests['email_stat data exists'] = true",
									"    if(jsonData.email_stat[0].label){",
									"    tests['email_stat label exists'] = true",
									"    }else{",
									"    tests['email_stat label exists'] = false",
									"    }",
									"  }else{",
									"    tests['email_stat data exists'] = false",
									"}",
									"",
									"if(jsonData.read_email_data.length){",
									"    tests['read_email_data data exists'] = true",
									"    if(jsonData.read_email_data[0].label){",
									"    tests['read_email_data label exists'] = true",
									"    }else{",
									"    tests['read_email_data label exists'] = false",
									"    }",
									"    ",
									"    if(jsonData.read_email_data[1].dates){",
									"    tests['read_email_data dates exists'] = true",
									"    }else{",
									"    tests['read_email_data dates exists'] = false",
									"    }",
									"  }else{",
									"    tests['read_email_data data exists'] = false",
									"}",
									"",
									"if(jsonData.read_mail_by_user.length){",
									"    tests['read_mail_by_user data exists'] = true",
									"    if(jsonData.read_mail_by_user[0].label){",
									"    tests['read_mail_by_user label exists'] = true",
									"    }else{",
									"    tests['read_mail_by_user label exists'] = false",
									"    }",
									"    ",
									"    if(jsonData.read_mail_by_user[1].dates){",
									"    tests['read_mail_by_user dates exists'] = true",
									"    }else{",
									"    tests['read_mail_by_user dates exists'] = false",
									"    }",
									"  }else{",
									"    tests['read_mail_by_user data exists'] = false",
									"}",
									"",
									"if(jsonData.email_stat_by_job_profile.length){",
									"    tests['email_stat_by_job_profile data exists'] = true",
									"    if(jsonData.email_stat_by_job_profile[0].label){",
									"    tests['email_stat_by_job_profile label exists'] = true",
									"    }else{",
									"    tests['email_stat_by_job_profile label exists'] = false",
									"    }",
									"    ",
									"    if(jsonData.email_stat_by_job_profile[1].dates){",
									"    tests['email_stat_by_job_profile dates exists'] = true",
									"    }else{",
									"    tests['email_stat_by_job_profile dates exists'] = false",
									"    }",
									"  }else{",
									"    tests['email_stat_by_job_profile data exists'] = false",
									"}",
									"}else{",
									"    tests['no data'] = true",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/dashboard",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "data_type",
									"value": "date",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "User Logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.data.length) {",
									"    tests['Logs data exists'] = true",
									"} else {",
									"    tests['Logs data exists'] = false",
									"}",
									"for (var i = 0; i < jsonData.data[0].action.length; i++) {",
									"    if (jsonData.data[0].action[i]) {",
									"        tests['action data exists'+ i ] = true",
									"    } else {",
									"        tests['action data exists' + i ] = false",
									"    }",
									"",
									"    if (jsonData.data[0].time[i]) {",
									"        tests['time data exists' + i ] = true",
									"    } else {",
									"        tests['time data exists' + i ] = false",
									"    }",
									"    ",
									"    if (jsonData.data[0].json[i]  || jsonData.data[0].json[i] === null) {",
									"        tests['json data exists' + i ] = true",
									"    } else {",
									"        tests['json data exists' + i ] = false",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/user/log/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"log",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email_id",
									"value": "saurabhcse.iimtgn@gmail.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "registration_id",
									"value": "186080",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile_no",
									"value": "8585917430",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2.IMAP",
			"description": "",
			"item": [
				{
					"name": "IMAP Save By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[responseBody] = true;",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"    if (jsonData) {",
									"    tests[\"data saved by admin\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"        postman.setEnvironmentVariable(\"imapId\", jsonData.id);",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        postman.setEnvironmentVariable(\"imapEmail\", jsonData.email);",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"     if(jsonData.message == \"Invalid credentials (Failure)\" || \"Email Already In Use\"){",
									"        tests['invalid imap details'] = true",
									"    }else{",
									"        tests['invalid imap details'] = false",
									"    }",
									"}",
									"    tests['Admin'] = true;",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Save By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"    tests['Hr'] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by hr\"] = true;",
									"} else {",
									"    tests[\"data is not saved by hr\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Hr'] = true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Save By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    tests['Guest'] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get imap by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id){",
									"    tests['data saved'] = true;",
									"    postman.setEnvironmentVariable(\"imapActive\",jsonData.active);",
									"    ",
									"}else{",
									"    tests['data saved'] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            if(jsonData[i].id == postman.getEnvironmentVariable(\"imapId\")){",
									"                tests['saved data exist'] = true",
									"            }",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].email) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Hr'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"    if(jsonData.message == \"Invalid Id\"){",
									"    tests[\"id don't exists\"] = true",
									"}else{",
									" if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}   ",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "java@123",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not updated by Hr \"]= true;",
									"}else{",
									"      tests[\"IMAP is not updated by Hr \"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Hr\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not updated by Guest \"]= true;",
									"}else{",
									"      tests[\"IMAP is not updated by Guest \"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "testhr69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get imap by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.email == postman.getEnvironmentVariable(\"imapEmail\")){",
									"    tests['data updated'] = true;",
									"}else{",
									"    tests['data updated'] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"successfully changed status\"] = true;",
									"} else {",
									"    tests[\"successfully changed status\"] = false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/{{imapEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"{{imapEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{imapEmail}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"Status is not changed successfully\"] = true;",
									"} else {",
									"    tests[\"Status is not changed successfully \"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/{{imapEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"{{imapEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "vaibhav_pathak@excellencetechnologies.in",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"Status is not changed successfully\"] = true;",
									"} else {",
									"   tests[\"Status is not changed successfully \"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/{{imapEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"{{imapEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "vaibhav_pathak@excellencetechnologies.in",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get imap by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.active){",
									"    tests['status changed'] = true;",
									"}else{",
									"    tests['status changed'] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3.Email Fetch",
			"description": "",
			"item": [
				{
					"name": "Fetch Latest Emails",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"if(jsonData.status){",
									"    tests['fetch latest email'] = true",
									"}else{",
									"    tests['fetch latest email'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/fetchByButton?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"fetchByButton"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Email Fetch",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.status == 1) {",
									"    tests[\"status success\"] = true;",
									"} else {",
									"    tests[\"status success\"] = false;",
									"}",
									"if (jsonData.data) {",
									"    tests[\"Data Found\"] = true;",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i]._id) {",
									"            postman.setEnvironmentVariable(\"mongo_id\",jsonData.data[i]._id);",
									"            tests[\"id Found \" + i] = true;",
									"        } else {",
									"            tests[\"id Found \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].email_date) {",
									"            tests[\"email_date Found \" + i] = true;",
									"        } else {",
									"            tests[\"email_date Found \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"Data Found\"] = false;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/fetch/null/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"fetch",
								"null",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.data) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.data.length -1; i++) {",
									"        if (jsonData.data[i].title) {",
									"            tests[\"title Found \" + i] = true;",
									"            ",
									"        } else {",
									"            tests[\"title Found \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/countEmail?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"countEmail"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Available Shedule Dates",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(i = 0 ;i<jsonData.length;i++){",
									"    if(jsonData[i]){",
									"        tests['data for ' + jsonData[i].date] = true",
									"    }else{",
									"        tests['data for ' + jsonData[i].date] = true",
									"    }",
									"    if(jsonData[i].time_slots.first_round.length){",
									"        tests['time slots avialable for first_round ' + jsonData[i].date] = true",
									"    }else{",
									"        tests['time slots avialable for first_round '  + jsonData[i].date ] = false",
									"    }",
									"    if(jsonData[i].time_slots.second_round.length){",
									"        tests['time slots avialable for second_round '  + jsonData[i].date] = true",
									"    }else{",
									"        tests['time slots avialable for second_round '  + jsonData[i].date] = false",
									"    }",
									"    if(jsonData[i].time_slots.third_round.length){",
									"        tests['time slots avialable for third_round '  + jsonData[i].date] = true",
									"    }else{",
									"        tests['time slots avialable for third_round '  + jsonData[i].date] = false",
									"    }",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/get/shedule?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"get",
								"shedule"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Mail Attachments On Drive",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status) {",
									"    tests['attacment save'] = true",
									"} else {",
									"    tests['attacment save'] = false",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/mailAttachment/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"mailAttachment",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Add by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"templateId\", jsonData.id);",
									"    tests[\"id exists\"] = true;",
									"} else {",
									"    tests[\"id exists\"] = false;",
									"}",
									"if (jsonData.body) {",
									"    tests[\"body exists\"] = true;",
									"} else {",
									"    tests[\"body exists\"] = false;",
									"}",
									"}else{",
									"   tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Save Tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"      tests[\"Login user is Admin\"] = true;",
									"if(jsonData.id){",
									"    tests[\"success message\"]= true;",
									"    postman.setEnvironmentVariable(\"tagId\", jsonData.id);",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Admin\"] = true;",
									"}",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									"postman.setEnvironmentVariable(\"subject\", \"test\" + Math.floor((Math.random() * 10000) + 1));"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Automatic?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Automatic"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "{{subject}}",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								},
								{
									"key": "is_job_profile_tag",
									"value": "1",
									"description": "",
									"type": "text"
								},
								{
									"key": "job_description",
									"value": "qwertyuiop",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/assignTag/{{tagId}}/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"assignTag",
								"{{tagId}}",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get candidate by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.tag_id.indexOf(postman.getEnvironmentVariable(\"tagId\").toString()) >= 0 ){",
									"    tests['tag assigned'] = true",
									"}else{",
									"    tests['tag assigned'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/getById/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"getById",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign Multiple Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/assignMultiple/{{tagId}}/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"assignMultiple",
								"{{tagId}}",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mongo_id[0]",
									"value": "{{mongo_id}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get candidate by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.tag_id.indexOf(postman.getEnvironmentVariable(\"tagId\").toString()) >= 0 ){",
									"    tests['tag assigned'] = true",
									"}else{",
									"    tests['tag assigned'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/getById/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"getById",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Change Unread Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"the unread status is successfully changed to false\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/changeUnreadStatus/{{mongo_id}}/false?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"changeUnreadStatus",
								"{{mongo_id}}",
								"false"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get candidate by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.unread){",
									"    tests['email unread'] = false",
									"}else{",
									"    tests['email unread'] = true",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/getById/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"getById",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Email History",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i]._id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].email_id) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/inbox/hr@excellencetechnologies.in?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"inbox",
								"hr@excellencetechnologies.in"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.message == \"Invalid Id\"){",
									"    tests[\"id don't exists\"] = true",
									"}else{",
									" if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}   ",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not delete by Hr\"]= true;",
									"}else{",
									"    tests[\"IMAP is not delete by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not delete by Guest\"]= true;",
									"}else{",
									"    tests[\"IMAP is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "4.Email Variable",
			"description": "",
			"item": [
				{
					"name": "Variable Add by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"variableId\", jsonData.id);",
									"    tests[\"Variable id exist\"] = true;",
									"} else {",
									"    tests[\"Variable id exist\"] = false;",
									"}",
									"if (jsonData.variableValue) {",
									"    tests[\"variableValue exist\"] = true;",
									"} else {",
									"    tests[\"variableValue exist\"] = false;",
									"}",
									"if (jsonData.variableCode) {",
									"    tests[\"variableCode exist\"] = true;",
									"} else {",
									"    tests[\"variableCode exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Add by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.id) {",
									"        postman.setEnvironmentVariable(\"variableId_hr\", jsonData.id)",
									"    tests[\"Variable id exist\"] = true;",
									"} else {",
									"    tests[\"Variable id exist\"] = false;",
									"}",
									"if (jsonData.variableValue) {",
									"    tests[\"variableValue exist\"] = true;",
									"} else {",
									"    tests[\"variableValue exist\"] = false;",
									"}",
									"if (jsonData.variableCode) {",
									"    tests[\"variableCode exist\"] = true;",
									"} else {",
									"    tests[\"variableCode exist\"] = false;",
									"}",
									"}else{",
									"    if(jsonData.id){",
									"        postman.setEnvironmentVariable(\"variableId_hr\", jsonData.id)",
									"    }",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Add by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.id) {",
									"        postman.setEnvironmentVariable(\"variableId_guest\", jsonData.id);",
									"    tests[\"Variable id exist\"] = true;",
									"} else {",
									"    tests[\"Variable id exist\"] = false;",
									"}",
									"if (jsonData.variableValue) {",
									"    tests[\"variableValue exist\"] = true;",
									"} else {",
									"    tests[\"variableValue exist\"] = false;",
									"}",
									"if (jsonData.variableCode) {",
									"    tests[\"variableCode exist\"] = true;",
									"} else {",
									"    tests[\"variableCode exist\"] = false;",
									"}",
									"}else{",
									"    if(jsonData.id){",
									"            postman.setEnvironmentVariable(\"variableId_guest\", jsonData.id);",
									"    }",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        if(jsonData[i].id == postman.getEnvironmentVariable(\"variableId\")){",
									"            tests['saved data Exists'] = true;",
									"        }",
									"        tests[\"id exist\" + i] = true;   ",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableCode) {",
									"        tests[\"variableCode exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableCode exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableValue) {",
									"        tests[\"variableValue exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableValue exist\" + i] = false;",
									"    }",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        if(jsonData[i].id == postman.getEnvironmentVariable(\"variableId_hr\")){",
									"            tests['saved data Exists'] = true;",
									"        }",
									"        tests[\"id exist\" + i] = true;",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableCode) {",
									"        tests[\"variableCode exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableCode exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableValue) {",
									"        tests[\"variableValue exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableValue exist\" + i] = false;",
									"    }",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"Email Variable is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"Email Variable is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"variableCode\", \"test\"+ Math.floor((Math.random() * 10000) + 1));"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "{{variableCode}}",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get variable by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id == postman.getEnvironmentVariable(\"variableId\")){",
									"    tests['data exist'] = true",
									"    if(jsonData.variableCode == postman.getEnvironmentVariable('variableCode')){",
									"        tests['data updated by admin'] = true",
									"    }else{",
									"        tests['data updated by admin'] = true",
									"    }",
									"}else{",
									"    tests['data exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/getById/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"getById",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId_hr}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId_hr}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "{{variableCode}}",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get variable by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id == postman.getEnvironmentVariable(\"variableId_hr\")){",
									"    tests['data exist'] = true",
									"    if(jsonData.variableCode == postman.getEnvironmentVariable('variableCode')){",
									"        tests['data updated by hr'] = true",
									"    }else{",
									"        tests['data updated by hr'] = true",
									"    }",
									"}else{",
									"    tests['data exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/getById/{{variableId_hr}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"getById",
								"{{variableId_hr}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Email Variable is not update by Guest\"]= true;",
									"}else{",
									"    tests[\"Email Variable is not update by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId_guest}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId_guest}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "{{variableCode}}",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get variable by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id == postman.getEnvironmentVariable(\"variableId_guest\")){",
									"    tests['data exist'] = true",
									"    if(jsonData.variableCode == postman.getEnvironmentVariable('variableId_guest')){",
									"        tests['data updated by guest'] = true",
									"    }else{",
									"        tests['data updated by guest'] = true",
									"    }",
									"}else{",
									"    tests['data exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/getById/{{variableId_guest}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"getById",
								"{{variableId_guest}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is not Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is not Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId_hr}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId_hr}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Email Variable is deleted by Guest\"]= true;",
									"}else{",
									"    tests[\"Email Variable is not deleted by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId_guest}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId_guest}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "5.SMTP",
			"description": "",
			"item": [
				{
					"name": "SMTP Save By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}",
									"if(jsonData.response_status.message == \"Status Changed Successfully\"){",
									"    postman.setEnvironmentVariable(\"smtpId\", jsonData.data.id);",
									"    postman.setEnvironmentVariable(\"smtpEmail\", jsonData.data.username);",
									"    tests[\"SMTP saved\"] = true;",
									"}else{",
									"    tests['SMTP saved'] = false;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text"
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Save By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text",
									"description": ""
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text",
									"description": ""
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Save By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text",
									"description": ""
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text",
									"description": ""
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].email) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData.id) {",
									"    tests['added data found'] = true;",
									"    tests[\"id found\"] = true;",
									"} else {",
									"    tests[\"id found\"] = false;",
									"}",
									"if (jsonData.email) {",
									"    tests[\"email found\"] = true;",
									"} else {",
									"    tests[\"email found\"] = false;",
									"}",
									"if (jsonData.password) {",
									"    tests[\"password found\"] = true;",
									"} else {",
									"    tests[\"password found\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text",
									"description": ""
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text",
									"description": ""
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"   tests[\"SMTP is not update by Hr\"]= true;",
									"}else{",
									"   tests[\"SMTP is not update by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Hr\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text",
									"description": ""
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text",
									"description": ""
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not update by Guest\"]= true;",
									"}else{",
									"   tests[\"SMTP is not update by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "password",
									"value": "java@123",
									"type": "text",
									"description": ""
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "server_port",
									"value": "465",
									"type": "text",
									"description": ""
								},
								{
									"key": "type",
									"value": "ssl",
									"type": "text",
									"description": ""
								},
								{
									"key": "status",
									"value": "true",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "testexcel69@gmail.com",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.status) {",
									"    tests[\"message sent successfully\"] = true;",
									"} else if(!jsonData.is_silent){",
									"    tests[\"message not sent successfully\"] = false;",
									"}else{",
									"    tests['is_silent'] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{smtpEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{smtpEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{smtpEmail}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.is_silent == true) {",
									"    tests[\"message not sent successfully\"] = true;",
									"} else {",
									"    tests[\"message not sent successfully\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{smtpEmail}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.is_silent == true) {",
									"    tests[\"message not sent successfully\"] = true;",
									"} else {",
									"    tests[\"message not sent successfully\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"} else {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{smtpEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{smtpEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Admin copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"} else {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{smtpEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{smtpEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status not Changed by Hr\"] = true;",
									"} else {",
									"    tests[\"Status not Changed by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{smtpEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{smtpEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status not Changed by Guest\"] = true;",
									"} else {",
									"    tests[\"Status not Changed by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{smtpEmail}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{smtpEmail}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData.id) {",
									"    tests['added data found'] = true;",
									"    tests[\"id found\"] = true;",
									"} else {",
									"    tests[\"id found\"] = false;",
									"}",
									"if (jsonData.email) {",
									"    tests[\"email found\"] = true;",
									"} else {",
									"    tests[\"email found\"] = false;",
									"}",
									"if (jsonData.password) {",
									"    tests[\"password found\"] = true;",
									"} else {",
									"    tests[\"password found\"] = false;",
									"}",
									"if(jsonData.status){",
									"    tests['status update'] = true",
									"}else{",
									"    tests['status update'] = false",
									"}",
									"}else{",
									"    tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "6.Template Page",
			"description": "",
			"item": [
				{
					"name": "Template Add by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"templateId\", jsonData.id);",
									"    tests[\"id exists\"] = true;",
									"} else {",
									"    tests[\"id exists\"] = false;",
									"}",
									"if (jsonData.body) {",
									"    tests[\"body exists\"] = true;",
									"} else {",
									"    tests[\"body exists\"] = false;",
									"}",
									"}else{",
									"   tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Add by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"   tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"   tests[\"data is not saved by Guest\"] = true;",
									"}",
									"}else{",
									"   tests[\"Login user is not Guset\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].templateName) {",
									"            tests[\"templateName exist \" + i] = true;",
									"        } else {",
									"            tests[\"templateName exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"     tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"     tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].templateName) {",
									"            tests[\"templateName exist \" + i] = true;",
									"        } else {",
									"            tests[\"templateName exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"     tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"     tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"   tests[\"data is not fetch by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"      tests[\"Login user is admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"     tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"templateName\", \"test\" + Math.floor((Math.random() * 10000) + 1));"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "{{templateName}}",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get template by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id){",
									"    tests['id exist'] = true",
									"    if(jsonData.templateName == postman.getEnvironmentVariable('templateName')){",
									"        tests['template updated'] = true",
									"    }else{",
									"        tests['template updated'] = false",
									"    }",
									"}else{",
									"    tests['id exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/getById/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"getById",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"      tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"     tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "{{templateName}}",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get template by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id){",
									"    tests['id exist'] = true",
									"    if(jsonData.templateName == postman.getEnvironmentVariable('templateName')){",
									"        tests['template updated'] = true",
									"    }else{",
									"        tests['template updated'] = false",
									"    }",
									"}else{",
									"    tests['id exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/getById/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"getById",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"      tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"template is not update by Guest\"]= true;",
									"}else{",
									"    tests[\"template is not update by Guest\"]= true;",
									"}",
									"}else{",
									"     tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "{{templateName}}",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get template by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.id){",
									"    tests['id exist'] = true",
									"    if(jsonData.templateName == postman.getEnvironmentVariable('templateName')){",
									"        tests['template updated'] = true",
									"    }else{",
									"        tests['template updated'] = false",
									"    }",
									"}else{",
									"    tests['id exist'] = false",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/getById/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"getById",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData){",
									"    tests[\"success\"] = true;",
									"}else{",
									"    tests[\"success\"] = false; ",
									"}",
									"}else{",
									"    tests[\"Login user is Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData){",
									"    tests[\"Template Test is not done by Hr\"] = true;",
									"}else{",
									"     tests[\"Template Test is not done by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData){",
									"    tests[\"Template Test is not done by Guest\"] = true;",
									"}else{",
									"     tests[\"Template Test is not done by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not delete by Hr\"]= true;",
									"}else{",
									"    tests[\"SMTP is not delete by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not delete by Guest\"]= true;",
									"}else{",
									"    tests[\"SMTP is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "7.Tag System",
			"description": "",
			"item": [
				{
					"name": "Save Tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"      tests[\"Login user is Hr\"] = true;",
									"if(jsonData.id){",
									"    tests[\"success message\"]= true;",
									"    postman.setEnvironmentVariable(\"tagId\", jsonData.id);",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Hr\"] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Manual?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Manual"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Save Tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"      tests[\"Login user is Guest\"] = true;",
									"if(jsonData){",
									"     tests[\"data is not saved by Guest\"] = true;",
									"}else{",
									"    tests[\"data is not saved by Guest\"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Guest\"] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Manual?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Manual"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"type exist \" + i] = true;",
									"        } else {",
									"            tests[\"type exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"type exist \" + i] = true;",
									"        } else {",
									"            tests[\"type exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"Tag is not fetch by Guest\"] = true;",
									"} else {",
									"    tests[\"Tag is not fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"     tests[\"Login user is Guest\"] = true; ",
									"if (jsonData) {",
									"    tests[\"Tag list is not Fetch by Guest\"] = true;",
									"} else {",
									"     tests[\"Tag list is not Fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true; ",
									"if (jsonData) {",
									"    tests[\"tag is not fetched by Guest\"] = true;",
									"} else {",
									"    tests[\"tag is not fetched by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "qwertyu",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "is_job_profile",
									"value": "1",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"    if(jsonData.email == postman.getEnvironmentVariable('email')){",
									"        tests['data updated'] = true",
									"    }else{",
									"        tests['data updated'] = false",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": "",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"    if(jsonData.email == postman.getEnvironmentVariable('email')){",
									"        tests['data updated'] = true",
									"    }else{",
									"        tests['data updated'] = false",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Tag is not update by Guest\"]= true;",
									"}else{",
									"     tests[\"Tag is not update by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": "",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"    if(jsonData.email == postman.getEnvironmentVariable('email')){",
									"        tests['data updated'] = true",
									"    }else{",
									"        tests['data updated'] = false",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Automatic/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Automatic",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Default/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Default",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Tag is not delete by Guest\"]= true;",
									"}else{",
									"   tests[\"Tag is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"     tests[\"template is not delete by Guest\"]= true;",
									"}else{",
									"     tests[\"template is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8.System Variable",
			"description": "",
			"item": [
				{
					"name": "Get System Variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        tests[\"id exist\" + i] = true;",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/systemVariable/get/{{page}}/{{limit}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"systemVariable",
								"get",
								"{{page}}",
								"{{limit}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "9. Candidate Device Data",
			"description": "",
			"item": [
				{
					"name": "Save Candidate Device Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.error) {",
									"    tests['error'] = false",
									"} else {",
									"    tests['error'] = true",
									"}",
									"if (jsonData.data) {",
									"    tests['data exist'] = true",
									"} else {",
									"    tests['data exist'] = false",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"device_id\", \"test\"+Math.floor((Math.random() * 10000) + 1));"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/app_save_candidate_device",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email_id",
									"value": "yuvraj@excellencetechnologies.in",
									"description": "",
									"type": "text"
								},
								{
									"key": "device_id",
									"value": "6eb04ca62d721b58",
									"description": "",
									"type": "text"
								},
								{
									"key": "token",
									"value": "fBSOKzg-1ko:APA91bEu5JIHO3l0SlE87SYMjNCDYxjBgdpRZMrMzNu4LyWU6bdSpCNB1xdxjS_Zmlf4hPHxv2i3OtqSgJlvru_Roty_tHbQT6SrRRMwno7Ff5z9TVY6ZfEiXL4-1JjYFJDkieQJqW5k",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Candidate Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.error) {",
									"    tests[\"error\"] = true",
									"} else {",
									"    tests['not error'] = true",
									"    if (jsonData.data.name) {",
									"    tests['name exists'] = true",
									"} else {",
									"    tests['name exists'] = false",
									"}",
									"if (jsonData.data.subject) {",
									"    tests['subject'] = true",
									"} else {",
									"    tests['subject'] = false",
									"}",
									"if (jsonData.data.rounds.length) {",
									"    tests['rounds exists'] = true",
									"    for (i = 0; i < jsonData.data.rounds.length; i++) {",
									"        if (jsonData.data.rounds[i].status) {",
									"            tests['interview sheduled ' + jsonData.data.rounds[i].text + \" status \" + jsonData.data.rounds[i].status] = true",
									"        } else {",
									"            tests['interview sheduled ' + jsonData.data.rounds[i].text + \" status \" + jsonData.data.rounds[i].status] = true",
									"        }",
									"    }",
									"} else {",
									"    tests['rounds exists'] = false",
									"}",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/app_get_candidate",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email_id",
									"value": "",
									"description": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "registration_id",
									"value": "800913",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Candidate Logout",
					"request": {
						"url": "{{url}}/candidate/logout",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email_id",
									"value": "yuvraj@excellencetechnologies.in",
									"description": "",
									"type": "text"
								},
								{
									"key": "device_id",
									"value": "6eb04ca62d721b58",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "User delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.error){",
									"    tests[\"error not exist\"] = false",
									"}else{",
									"    tests['error not exist'] = true",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/user/delete/{{user_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"delete",
								"{{user_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}