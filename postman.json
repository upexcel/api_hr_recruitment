{
	"variables": [],
	"info": {
		"name": "hr_recruitment",
		"_postman_id": "95ed1ec8-2001-b807-7452-024eb41edeae",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1.User Registration",
			"description": "",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.data.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.data.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"    if (jsonData.data.password) {",
									"        tests[\"password exist\"] = true;",
									"    } else {",
									"        tests[\"password exist\"] = false;",
									"    }",
									"    if (jsonData.data.user_type) {",
									"        postman.setEnvironmentVariable(\"type\", jsonData.data.user_type);",
									"        tests[\"type\"] = true;",
									"    } else {",
									"        tests[\"type\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"email\", \"test\" + Math.floor((Math.random() * 10000) + 1) + \"@gmail.com\");",
									"postman.setEnvironmentVariable(\"page\", 1);",
									"postman.setEnvironmentVariable(\"limit\", 10);"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/register",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "user_type",
									"value": "Admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "confirm_password",
									"value": "123",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.token) {",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"    tests[\"token exist\"] = true;",
									"} else {",
									"    tests[\"token exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.status == true){",
									"    tests[\"token verify\"] = true;",
									"}else{",
									"    tests[\"token verify\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/verify?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"verify"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2.Email Fetch",
			"description": "",
			"item": [
				{
					"name": "Email Fetch",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.message && jsonData.message == \"success\") {",
									"    tests[\"message success\"] = true;",
									"} else {",
									"    tests[\"message success\"] = false;",
									"}",
									"if (jsonData.status == 1) {",
									"    tests[\"status success\"] = true;",
									"} else {",
									"    tests[\"status success\"] = false;",
									"}",
									"if (jsonData.data) {",
									"    tests[\"Data Found\"] = true;",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i]._id) {",
									"            postman.setEnvironmentVariable(\"mongo_id\",jsonData.data[i]._id);",
									"            tests[\"id Found \" + i] = true;",
									"        } else {",
									"            tests[\"id Found \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].email_id) {",
									"            tests[\"email_id Found \" + i] = true;",
									"        } else {",
									"            tests[\"email_id Found \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].email_date) {",
									"            tests[\"email_date Found \" + i] = true;",
									"        } else {",
									"            tests[\"email_date Found \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"Data Found\"] = false;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/fetch/null/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"fetch",
								"null",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/assignTag/1/{{mongo_id}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"assignTag",
								"1",
								"{{mongo_id}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}",
									"if (jsonData.data) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i].title) {",
									"            tests[\"title Found \" + i] = true;",
									"        } else {",
									"            tests[\"title Found \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].color) {",
									"            tests[\"color Found \" + i] = true;",
									"        } else {",
									"            tests[\"color Found \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].type) {",
									"            tests[\"type Found \" + i] = true;",
									"        } else {",
									"            tests[\"type Found \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/countEmail?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"countEmail"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign Multiple Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/assignMultiple/1/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"assignMultiple",
								"1",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mongo_id[0]",
									"value": "{{mongo_id}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Change Unread Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"the unread status is successfully changed to false\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/changeUnreadStatus/{{mongo_id}}/false?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"changeUnreadStatus",
								"{{mongo_id}}",
								"false"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Email Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/deleteEmail/1?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"deleteEmail",
								"1"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mongo_id[0]",
									"value": "{{mongo_id}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.status == 1) {",
									"    tests[\"status exist\"] = true;",
									"} else {",
									"    tests[\"status exist\"] = false;",
									"}",
									"if (jsonData.message == \"success\") {",
									"    tests[\"Success message exist\"] = true;",
									"} else {",
									"    tests[\"Success message exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/deleteTag/1/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"deleteTag",
								"1",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mongo_id[0]",
									"value": "{{mongo_id}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Email History",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.data) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.data.length; i++) {",
									"        if (jsonData.data[i]._id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData.data[i].email_id) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/email/inbox/hr@excellencetechnologies.in?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"email",
								"inbox",
								"hr@excellencetechnologies.in"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3.Email Variable",
			"description": "",
			"item": [
				{
					"name": "Variable Add by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"variableId\", jsonData.id);",
									"    tests[\"Variable id exist\"] = true;",
									"} else {",
									"    tests[\"Variable id exist\"] = false;",
									"}",
									"if (jsonData.variableValue) {",
									"    tests[\"variableValue exist\"] = true;",
									"} else {",
									"    tests[\"variableValue exist\"] = false;",
									"}",
									"if (jsonData.variableCode) {",
									"    tests[\"variableCode exist\"] = true;",
									"} else {",
									"    tests[\"variableCode exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Add by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"variableId\", jsonData.id);",
									"    tests[\"Variable id exist\"] = true;",
									"} else {",
									"    tests[\"Variable id exist\"] = false;",
									"}",
									"if (jsonData.variableValue) {",
									"    tests[\"variableValue exist\"] = true;",
									"} else {",
									"    tests[\"variableValue exist\"] = false;",
									"}",
									"if (jsonData.variableCode) {",
									"    tests[\"variableCode exist\"] = true;",
									"} else {",
									"    tests[\"variableCode exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Add by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"Email Variable is not add by Guest\"] = true;",
									"} else {",
									"    tests[\"Email Variable is not add by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/add/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"add",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableValue",
									"value": "rvebdvfbkeh hfrkefuer",
									"type": "text"
								},
								{
									"key": "variableCode",
									"value": "abc",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        tests[\"id exist\" + i] = true;",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableCode) {",
									"        tests[\"variableCode exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableCode exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableValue) {",
									"        tests[\"variableValue exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableValue exist\" + i] = false;",
									"    }",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        tests[\"id exist\" + i] = true;",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableCode) {",
									"        tests[\"variableCode exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableCode exist\" + i] = false;",
									"    }",
									"    if (jsonData[i].variableValue) {",
									"        tests[\"variableValue exist\" + i] = true;",
									"    } else {",
									"        tests[\"variableValue exist\" + i] = false;",
									"    }",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable GET by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"Email Variable is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"Email Variable is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/get/1/10/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"get",
								"1",
								"10",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "vedf ef",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "vedf ef",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Email Variable is not update by Guest\"]= true;",
									"}else{",
									"    tests[\"Email Variable is not update by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/update/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"update",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "variableCode",
									"value": "vedf ef",
									"type": "text"
								},
								{
									"key": "variableValue",
									"value": "ytnjyumnkui",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is not Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is not Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Variable Delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Email Variable is not deleted by Guest\"]= true;",
									"}else{",
									"    tests[\"Email Variable is not deleted by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/variable/delete/{{variableId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"variable",
								"delete",
								"{{variableId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "4.IMAP",
			"description": "",
			"item": [
				{
					"name": "IMAP Save By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"    if (jsonData.data) {",
									"    tests[\"data saved by admin\"] = true;",
									"    if (jsonData.data.id) {",
									"        tests[\"id exist\"] = true;",
									"        postman.setEnvironmentVariable(\"imapId\", jsonData.data.id);",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.data.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"    tests['Admin'] = true;",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"imapEmail\", \"test\" + Math.floor((Math.random() * 10000) + 1) + \"@gmail.com\")"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{imapEmail}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Save By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"    tests['Hr'] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by hr\"] = true;",
									"} else {",
									"    tests[\"data is not saved by hr\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Hr'] = true;",
									"}",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{imapEmail}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Save By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    tests['Guest'] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/save?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"save"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{imapEmail}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].email) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Hr'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Get By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = false;",
									"}    ",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12333333333",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not updated by Hr \"]= true;",
									"}else{",
									"      tests[\"IMAP is not updated by Hr \"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Hr\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12333333333",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not updated by Guest \"]= true;",
									"}else{",
									"      tests[\"IMAP is not updated by Guest \"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/update/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"update",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "imap_server",
									"value": "sasssss",
									"type": "text"
								},
								{
									"key": "type",
									"value": "TLS",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12333333333",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "8091",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"successfully changed status\"] = true;",
									"} else {",
									"    tests[\"successfully changed status\"] = false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/vaibhav_pathak@excellencetechnologies.in?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"vaibhav_pathak@excellencetechnologies.in"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "vaibhav_pathak@excellencetechnologies.in",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"Status is not changed successfully\"] = true;",
									"} else {",
									"    tests[\"Status is not changed successfully \"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/vaibhav_pathak@excellencetechnologies.in?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"vaibhav_pathak@excellencetechnologies.in"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "vaibhav_pathak@excellencetechnologies.in",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Change Status to Active by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.message) {",
									"    tests[\"Status is not changed successfully\"] = true;",
									"} else {",
									"   tests[\"Status is not changed successfully \"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/statusActive/vaibhav_pathak@excellencetechnologies.in?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"statusActive",
								"vaibhav_pathak@excellencetechnologies.in"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "vaibhav_pathak@excellencetechnologies.in",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not delete by Hr\"]= true;",
									"}else{",
									"    tests[\"IMAP is not delete by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "IMAP Delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"IMAP is not delete by Guest\"]= true;",
									"}else{",
									"    tests[\"IMAP is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/imap/delete/{{imapId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"imap",
								"delete",
								"{{imapId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "5.SMTP",
			"description": "",
			"item": [
				{
					"name": "SMTP Save By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"    if (jsonData.data) {",
									"    tests[\"data saved by admin\"] = true;",
									"    if (jsonData.data.id) {",
									"        tests[\"id exist\"] = true;",
									"       postman.setEnvironmentVariable(\"smtpId\", jsonData.data.id);",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.data.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Admin'] = true;",
									"}",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "0001",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Save By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "0001",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Save By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"    if (!jsonData.data) {",
									"    tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not saved by Guest\"] = false;",
									"}",
									"}else{",
									"    tests['Login user is not Guest'] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/save/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"save",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "0001",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].email) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Get by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData.id) {",
									"    tests[\"id found\"] = true;",
									"} else {",
									"    tests[\"id found\"] = false;",
									"}",
									"if (jsonData.email) {",
									"    tests[\"email found\"] = true;",
									"} else {",
									"    tests[\"email found\"] = false;",
									"}",
									"if (jsonData.password) {",
									"    tests[\"password found\"] = true;",
									"} else {",
									"    tests[\"password found\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Hr\"] = true;",
									"} else {",
									"    tests[\"data is not get by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp GetById by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"data is not get by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not get by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/getbyid/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"getbyid",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12312",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"   tests[\"SMTP is not update by Hr\"]= true;",
									"}else{",
									"   tests[\"SMTP is not update by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Hr\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12312",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not update by Guest\"]= true;",
									"}else{",
									"   tests[\"SMTP is not update by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/update/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"update",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12312",
									"type": "text"
								},
								{
									"key": "smtp_server",
									"value": "smtp.gmail.com",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "993",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SSL",
									"type": "text"
								},
								{
									"key": "status",
									"value": "true",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.is_silent) {",
									"    tests[\"message sent successfully\"] = true;",
									"} else {",
									"    tests[\"message not sent successfully\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.is_silent == true) {",
									"    tests[\"message not sent successfully\"] = true;",
									"} else {",
									"    tests[\"message not sent successfully\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Smtp test by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.is_silent == true) {",
									"    tests[\"message not sent successfully\"] = true;",
									"} else {",
									"    tests[\"message not sent successfully\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/testSmtp/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"testSmtp",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"} else {",
									"    tests[\"Status Changed Successfully\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status not Changed by Hr\"] = true;",
									"} else {",
									"    tests[\"Status not Changed by Hr\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP change status by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData.message == \"Status Changed Successfully\") {",
									"    tests[\"Status not Changed by Guest\"] = true;",
									"} else {",
									"    tests[\"Status not Changed by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/changeStatus/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"changeStatus",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "6.Template Page",
			"description": "",
			"item": [
				{
					"name": "Template Add by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is admin\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"templateId\", jsonData.id);",
									"    tests[\"id exists\"] = true;",
									"} else {",
									"    tests[\"id exists\"] = false;",
									"}",
									"if (jsonData.body) {",
									"    tests[\"body exists\"] = true;",
									"} else {",
									"    tests[\"body exists\"] = false;",
									"}",
									"}else{",
									"   tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Add by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData.id) {",
									"    postman.setEnvironmentVariable(\"templateId\", jsonData.id);",
									"    tests[\"id exists\"] = true;",
									"} else {",
									"    tests[\"id exists\"] = false;",
									"}",
									"if (jsonData.body) {",
									"    tests[\"body exists\"] = true;",
									"} else {",
									"    tests[\"body exists\"] = false;",
									"}",
									"}else{",
									"   tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Add by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"   tests[\"data is not saved by Guest\"] = true;",
									"} else {",
									"   tests[\"data is not saved by Guest\"] = true;",
									"}",
									"}else{",
									"   tests[\"Login user is not Guset\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/add?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"add"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "templateName",
								"value": "abc",
								"description": ""
							},
							{
								"key": "subject",
								"value": "abc",
								"description": ""
							},
							{
								"key": "body",
								"value": "cdegfcvgrejfgvjehrfgre",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "cde",
									"type": "text"
								},
								{
									"key": "body",
									"value": "efcjkjvdf",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].templateName) {",
									"            tests[\"templateName exist \" + i] = true;",
									"        } else {",
									"            tests[\"templateName exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"     tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"     tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].templateName) {",
									"            tests[\"templateName exist \" + i] = true;",
									"        } else {",
									"            tests[\"templateName exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"     tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Get by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"     tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"   tests[\"data is not fetch by Guest\"] = true;",
									"} else {",
									"    tests[\"data is not fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/get/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"get",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"      tests[\"Login user is admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"     tests[\"Login user is not admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"      tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"     tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Template Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"      tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"template is not update by Guest\"]= true;",
									"}else{",
									"    tests[\"template is not update by Guest\"]= true;",
									"}",
									"}else{",
									"     tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/update/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"update",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "templateName",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "pqr",
									"type": "text"
								},
								{
									"key": "body",
									"value": "vfdjvcfehgkvergkvevhgeiy",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Send Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.message ==\"messsage send successfully\" ){",
									"    tests[\"sucess\"] = true;",
									"    tests[\"message sent sucessfully\"] = true;",
									"}else{",
									"    tests[\"sucess\"] = false;",
									"    tests[\"message sent sucessfully\"] = false;",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/email/{{email}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"email",
								"{{email}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "subject",
									"value": "abcdef",
									"description": "",
									"type": "text"
								},
								{
									"key": "body",
									"value": "defgh",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"  tests[\"Login user is not Admin\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not delete by Hr\"]= true;",
									"}else{",
									"    tests[\"SMTP is not delete by Hr\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "SMTP Delete By Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"SMTP is not delete by Guest\"]= true;",
									"}else{",
									"    tests[\"SMTP is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"  tests[\"Login user is not Guest\"] = true;   ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/smtp/delete/{{smtpId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"smtp",
								"delete",
								"{{smtpId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData){",
									"    tests[\"success\"] = true;",
									"}else{",
									"    tests[\"success\"] = false; ",
									"}",
									"}else{",
									"    tests[\"Login user is Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData){",
									"    tests[\"success\"] = true;",
									"}else{",
									"    tests[\"success\"] = false; ",
									"}",
									"}else{",
									"    tests[\"Login user is Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Test Template by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData){",
									"    tests[\"Template Test is not done by Guest\"] = true;",
									"}else{",
									"     tests[\"Template Test is not done by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/test/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"test",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "7.Tag System",
			"description": "",
			"item": [
				{
					"name": "Save Tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"      tests[\"Login user is Admin\"] = true;",
									"if(jsonData.id){",
									"    tests[\"success message\"]= true;",
									"    postman.setEnvironmentVariable(\"tagId\", jsonData.id);",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Admin\"] = true;",
									"}",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Manual?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Manual"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Save Tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"      tests[\"Login user is Hr\"] = true;",
									"if(jsonData.id){",
									"    tests[\"success message\"]= true;",
									"    postman.setEnvironmentVariable(\"tagId\", jsonData.id);",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"      tests[\"Login user is not Hr\"] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Manual?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Manual"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Save Tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"      tests[\"Login user is Guest\"] = true;",
									"if(jsonData){",
									"     tests[\"data is not saved by Guest\"] = true;",
									"}else{",
									"    tests[\"data is not saved by Guest\"] = true;",
									"}",
									"}else{",
									"      tests[\"Login user is not Guest\"] = true;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/add/Manual?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"add",
								"Manual"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text"
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text"
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text"
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text"
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"type exist \" + i] = true;",
									"        } else {",
									"            tests[\"type exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"type exist \" + i] = true;",
									"        } else {",
									"            tests[\"type exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag get By Type Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if (jsonData) {",
									"    tests[\"Tag is not fetch by Guest\"] = true;",
									"} else {",
									"    tests[\"Tag is not fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								""
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"     tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    for (i = 0; i < jsonData.length; i++) {",
									"        if (jsonData[i].id) {",
									"            tests[\"id exist \" + i] = true;",
									"        } else {",
									"            tests[\"id exist \" + i] = false;",
									"        }",
									"        if (jsonData[i].type) {",
									"            tests[\"email exist \" + i] = true;",
									"        } else {",
									"            tests[\"email exist \" + i] = false;",
									"        }",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get Tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"     tests[\"Login user is Guest\"] = true; ",
									"if (jsonData) {",
									"    tests[\"Tag list is not Fetch by Guest\"] = true;",
									"} else {",
									"     tests[\"Tag list is not Fetch by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/get/Manual/1/10?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"get",
								"Manual",
								"1",
								"10"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true; ",
									"if (jsonData) {",
									"    tests[\"data exist\"] = true;",
									"    if (jsonData.id) {",
									"        tests[\"id exist\"] = true;",
									"    } else {",
									"        tests[\"id exist\"] = false;",
									"    }",
									"    if (jsonData.email) {",
									"        tests[\"email exist\"] = true;",
									"    } else {",
									"        tests[\"email exist\"] = false;",
									"    }",
									"} else {",
									"    tests[\"data exist\"] = false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getbyid tag by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true; ",
									"if (jsonData) {",
									"    tests[\"tag is not fetched by Guest\"] = true;",
									"} else {",
									"    tests[\"tag is not fetched by Guest\"] = true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true; ",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/getbyid/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"getbyid",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"title\", \"test\" + Math.floor((Math.random() * 10000) + 1));",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Tag Update by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Tag is not update by Guest\"]= true;",
									"}else{",
									"     tests[\"Tag is not update by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/update/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"update",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "title",
									"value": "{{title}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "color",
									"value": "sdbdsf",
									"type": "text",
									"description": ""
								},
								{
									"key": "subject",
									"value": "nddsdj",
									"type": "text",
									"description": ""
								},
								{
									"key": "to",
									"value": "2017-05-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "from",
									"value": "2017-08-13",
									"type": "text",
									"description": ""
								},
								{
									"key": "template_id",
									"value": "{{templateId}}",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "tag delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type==\"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"Tag is not delete by Guest\"]= true;",
									"}else{",
									"   tests[\"Tag is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/tag/delete/Manual/{{tagId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tag",
								"delete",
								"Manual",
								"{{tagId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Admin\"){",
									"    tests[\"Login user is Admin\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Admin\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Hr",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Hr\"){",
									"    tests[\"Login user is Hr\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"    tests[\"success message\"]= true;",
									"}else{",
									"    tests[\"success message\"]= false;",
									"}",
									"}else{",
									"    tests[\"Login user is not Hr\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "template delete by Guest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(environment.type == \"Guest\"){",
									"    tests[\"Login user is Guest\"] = true;",
									"if(jsonData.status == \"SUCCESS\"){",
									"     tests[\"template is not delete by Guest\"]= true;",
									"}else{",
									"     tests[\"template is not delete by Guest\"]= true;",
									"}",
									"}else{",
									"    tests[\"Login user is not Guest\"] = true;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/template/delete/{{templateId}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"template",
								"delete",
								"{{templateId}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "8.System Variable",
			"description": "",
			"item": [
				{
					"name": "Get System Variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for (var i = 0; i < jsonData.length; i++) {",
									"    if (jsonData[i].id) {",
									"        tests[\"id exist\" + i] = true;",
									"    } else {",
									"        tests[\"id exist\" + i] = false;",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/systemVariable/get/{{page}}/{{limit}}?accessToken={{token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"systemVariable",
								"get",
								"{{page}}",
								"{{limit}}"
							],
							"query": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}