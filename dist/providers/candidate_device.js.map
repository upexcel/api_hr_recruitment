{"version":3,"sources":["../../src/providers/candidate_device.js"],"names":["BaseProvider","save","validate","body","validationResult","Promise","resolve","reject","notEmpty","then","result","isEmpty","array","msg"],"mappings":";;;;;;;;AAAA;;IAAYA,Y;;AACZ;;;;;;;;AAEA;AACA,IAAMC,OAAO,SAAPA,IAAO,CAACC,QAAD,EAAWC,IAAX,EAAiBC,gBAAjB;AAAA,WAAsC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChFL,iBAAS,UAAT,EAAqB,0BAArB,EAAiDM,QAAjD;AACAN,iBAAS,WAAT,EAAsB,2BAAtB,EAAmDM,QAAnD;AACAN,iBAAS,OAAT,EAAkB,uBAAlB,EAA2CM,QAA3C;AACAJ,yBAAiBK,IAAjB,CAAsB,UAACC,MAAD,EAAY;AAC9B,gBAAI,CAACA,OAAOC,OAAP,EAAL,EAAuB;AACnBJ,uBAAOG,OAAOE,KAAP,GAAe,CAAf,EAAkBC,GAAzB;AACH,aAFD,MAEO;AACHP,wBAAQH,IAAR;AACH;AACJ,SAND;AAOH,KAXkD,CAAtC;AAAA,CAAb;;+BAcOH,Y;AACHC","file":"candidate_device.js","sourcesContent":["import * as BaseProvider from \"./BaseProvider\";\nimport util from \"util\";\n\n/* Provider for User Registration */\nconst save = (validate, body, validationResult) => new Promise((resolve, reject) => {\n    validate(\"email_id\", \"email_id cannot be empty\").notEmpty();\n    validate(\"device_id\", \"device_id cannot be empty\").notEmpty();\n    validate(\"token\", \"token cannot be empty\").notEmpty();\n    validationResult.then((result) => {\n        if (!result.isEmpty()) {\n            reject(result.array()[0].msg);\n        } else {\n            resolve(body);\n        }\n    });\n});\n\nexport default {\n    ...BaseProvider,\n    save,\n};"]}