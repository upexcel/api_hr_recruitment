{"version":3,"sources":["../../src/models/candidate_device.js"],"names":["sequelize","DataTypes","Candidate_device","define","email_id","STRING","device_id","token","hooks","beforeCreate","CANDIDATE_DEVICE","Promise","resolve","reject","findOne","where","then","email","timestamps","freezeTableName","allowNull","classMethods","createDevice","body","device","update","response","create","data","logout","err"],"mappings":";;;;;;kBAAe,UAASA,SAAT,EAAoBC,SAApB,EAA+B;AAC1C,QAAMC,mBAAmBF,UAAUG,MAAV,CAAiB,kBAAjB,EAAqC;AAC1DC,kBAAUH,UAAUI,MADsC;AAE1DC,mBAAWL,UAAUI,MAFqC;AAG1DE,eAAON,UAAUI;AAHyC,KAArC,EAItB;AACCG,eAAO;AACHC,0BAAc,sBAASC,gBAAT,EAA2B;AAAA;;AACrC,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,0BAAKC,OAAL,CAAa,EAAEC,OAAO,EAAE,OAAO,CAAC,EAAEX,UAAUM,iBAAiBN,QAA7B,EAAD,EAA0C,EAAEE,WAAWI,iBAAiBJ,SAA9B,EAA1C,CAAT,EAAT,EAAb,EACKU,IADL,CACU,UAACC,KAAD,EAAW;AACb,4BAAIA,KAAJ,EAAW;AACPJ,mCAAO,gCAAP;AACH,yBAFD,MAEO;AACHD;AACH;AACJ,qBAPL;AAQH,iBATM,CAAP;AAWH;AAbE,SADR;AAgBCM,oBAAY,IAhBb;AAiBCC,yBAAiB,IAjBlB;AAkBCC,mBAAW,IAlBZ;;AAoBCC,sBAAc;AACVC,wBADU,wBACGC,IADH,EACS;AAAA;;AACf,uBAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,2BAAKC,OAAL,CAAa,EAAEC,OAAO,EAAEX,UAAUmB,KAAKnB,QAAjB,EAAT,EAAb,EACKY,IADL,CACU,UAACQ,MAAD,EAAY;AACd,4BAAIA,MAAJ,EAAY;AACR,mCAAKC,MAAL,CAAYF,IAAZ,EAAkB,EAAER,OAAO,EAAEX,UAAUmB,KAAKnB,QAAjB,EAAT,EAAlB,EACKY,IADL,CACU,UAACU,QAAD,EAAc;AAAEd,wCAAQc,QAAR;AAAmB,6BAD7C;AAEH,yBAHD,MAGO;AACH,mCAAKC,MAAL,CAAYJ,IAAZ,EACKP,IADL,CACU,UAACY,IAAD,EAAU;AAAEhB,wCAAQgB,IAAR;AAAe,6BADrC;AAEH;AACJ,qBATL;AAUH,iBAXM,CAAP;AAYH,aAdS;AAeVC,kBAfU,kBAeHzB,QAfG,EAeOE,SAfP,EAekB;AAAA;;AACxB,uBAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,2BAAKY,MAAL,CAAY,EAAElB,OAAO,IAAT,EAAeD,WAAW,IAA1B,EAAZ,EAA8C,EAAES,OAAO,EAAEX,UAAUA,QAAZ,EAAsBE,WAAWA,SAAjC,EAAT,EAA9C,EACKU,IADL,CACU,UAACU,QAAD,EAAc;AAChBd,gCAAQc,QAAR;AACH,qBAHL,EAGO,UAACI,GAAD,EAAS;AAAEjB,+BAAOiB,GAAP;AAAa,qBAH/B;AAIH,iBALM,CAAP;AAMH;AAtBS;AApBf,KAJsB,CAAzB;AAiDA,WAAO5B,gBAAP;AACH,C","file":"candidate_device.js","sourcesContent":["export default function(sequelize, DataTypes) {\n    const Candidate_device = sequelize.define(\"CANDIDATE_DEVICE\", {\n        email_id: DataTypes.STRING,\n        device_id: DataTypes.STRING,\n        token: DataTypes.STRING,\n    }, {\n        hooks: {\n            beforeCreate: function(CANDIDATE_DEVICE) {\n                return new Promise((resolve, reject) => {\n                    this.findOne({ where: { \"$or\": [{ email_id: CANDIDATE_DEVICE.email_id }, { device_id: CANDIDATE_DEVICE.device_id }] } })\n                        .then((email) => {\n                            if (email) {\n                                reject(\"depuplicate device information\");\n                            } else {\n                                resolve();\n                            }\n                        });\n                });\n\n            }\n        },\n        timestamps: true,\n        freezeTableName: true,\n        allowNull: true,\n\n        classMethods: {\n            createDevice(body) {\n                return new Promise((resolve, reject) => {\n                    this.findOne({ where: { email_id: body.email_id } })\n                        .then((device) => {\n                            if (device) {\n                                this.update(body, { where: { email_id: body.email_id } })\n                                    .then((response) => { resolve(response) })\n                            } else {\n                                this.create(body)\n                                    .then((data) => { resolve(data) })\n                            }\n                        })\n                })\n            },\n            logout(email_id, device_id) {\n                return new Promise((resolve, reject) => {\n                    this.update({ token: null, device_id: null }, { where: { email_id: email_id, device_id: device_id } })\n                        .then((response) => {\n                            resolve(response)\n                        }, (err) => { reject(err) })\n                })\n            }\n        }\n    });\n    return Candidate_device;\n}"]}