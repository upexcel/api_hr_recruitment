{"version":3,"sources":["../../src/service/pushmessage.js"],"names":["pushMessage","device_info","information","Promise","resolve","reject","server_key","process","env","push_message_server_key","fcm","message","to","token","notification","title","push_notification_message","body","icon","sound","data","status","priority","send","err","response","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAIA,cAAc,SAAdA,WAAc,CAACC,WAAD,EAAcC,WAAd,EAA8B;AAC5C,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,aAAaC,QAAQC,GAAR,CAAYC,uBAAZ,IAAuC,iBAAOA,uBAA/D;AACA,YAAIC,MAAM,sBAAQJ,UAAR,CAAV;AACA,YAAIK,UAAU;AACVC,gBAAIX,YAAYY,KADN,EACa;AACvBC,0BAAc;AACVC,uBAAO,0BAAWC,yBADR;AAEVC,sBAAMf,WAFI;AAGVgB,sBAAM,iBAHI;AAIVC,uBAAO;AAJG,aAFJ;AAQVC,kBAAM;AACFH,sBAAM;AACFI,4BAAQ;AADN;AADJ,aARI;AAaVC,sBAAU;AAbA,SAAd;AAeAZ,YAAIa,IAAJ,CAASZ,OAAT,EAAkB,UAASa,GAAT,EAAcC,QAAd,EAAwB;AACtC,gBAAID,GAAJ,EAAS;AACLpB,wBAAQ,EAAEsB,OAAO,CAAT,EAAYf,SAASa,GAArB,EAA0BJ,MAAM,EAAhC,EAAR;AACH,aAFD,MAEO;AACHhB,wBAAQ,EAAEsB,OAAO,CAAT,EAAYf,SAASc,QAArB,EAA+BL,MAAM,EAArC,EAAR;AACH;AACJ,SAND;AAQH,KA1BM,CAAP;AA2BH,CA5BD;;kBA8Be;AACXpB;AADW,C","file":"pushmessage.js","sourcesContent":["import FCM from 'fcm-push';\nimport config from \"../config.js\";\nimport constant from '../models/constant'\nlet pushMessage = (device_info, information) => {\n    return new Promise((resolve, reject) => {\n        let server_key = process.env.push_message_server_key || config.push_message_server_key;\n        let fcm = new FCM(server_key);\n        let message = {\n            to: device_info.token, // required fill with device token or topics\n            notification: {\n                title: constant().push_notification_message,\n                body: information,\n                icon: 'ic_stat_drawing',\n                sound: 'default'\n            },\n            data: {\n                body: {\n                    status: 1\n                }\n            },\n            priority: 'high'\n        };\n        fcm.send(message, function(err, response) {\n            if (err) {\n                resolve({ error: 1, message: err, data: [] })\n            } else {\n                resolve({ error: 0, message: response, data: [] })\n            }\n        });\n\n    })\n}\n\nexport default {\n    pushMessage\n}"]}