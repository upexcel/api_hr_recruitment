{"version":3,"sources":["../../src/service/userActivity.js"],"names":["userActivityLogs","req","response","Promise","resolve","reject","user","api_log_record","forEach","ignored_api_log_list","val","key","path","match","RegExp","length","data","dataValues","user_activity","findOne","email","exec","err","result","update","originalUrl","toString","Date","activity","time","json","save"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,QAAN,EAAmB;AACxC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAI,CAACJ,IAAIK,IAAT,EAAe;AACXF;AACH,SAFD,MAEO;AACH,gBAAIG,iBAAiB,IAArB;AACA,6BAAEC,OAAF,CAAU,0BAAWC,oBAArB,EAA2C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrD,oBAAIV,IAAIW,IAAJ,CAASC,KAAT,CAAe,IAAIC,MAAJ,CAAWJ,GAAX,EAAgB,IAAhB,CAAf,CAAJ,EAA2C;AACvCH,qCAAiB,KAAjB;AACH;AACD,oBAAII,OAAO,0BAAWF,oBAAX,CAAgCM,MAAhC,GAAyC,CAAhD,IAAqD,CAACR,cAA1D,EAA0E;AACtEH;AACH;AACJ,aAPD;AAQA,gBAAIG,cAAJ,EAAoB;AAChB,oBAAIS,OAAOd,QAAX;AACAA,2BAAWA,SAASc,IAAT,GAAgBd,SAASc,IAAzB,GAAgCd,SAASe,UAApD;AACAhB,oBAAIiB,aAAJ,CAAkBC,OAAlB,CAA0B,EAAEC,OAAOnB,IAAIK,IAAJ,CAASc,KAAlB,EAA1B,EAAqDC,IAArD,CAA0D,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC5E,wBAAIA,MAAJ,EAAY;AACRtB,4BAAIiB,aAAJ,CAAkBM,MAAlB,CAAyB,EAAE,SAASvB,IAAIK,IAAJ,CAASc,KAApB,EAAzB,EAAsD,EAAE,SAAS,EAAE,UAAUnB,IAAIwB,WAAJ,CAAgBC,QAAhB,EAAZ,EAAwC,QAAQ,IAAIC,IAAJ,GAAWD,QAAX,EAAhD,EAAuE,QAAQxB,YAAYc,IAA3F,EAAX,EAAtD,EAAqKK,IAArK,CAA0K,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC5LnB,oCAAQ,QAAR;AACH,yBAFD;AAGH,qBAJD,MAIO;AACH,4BAAIwB,WAAW,IAAI3B,IAAIiB,aAAR,CAAsB,EAAE,SAASjB,IAAIK,IAAJ,CAASc,KAApB,EAA2B,UAAU,CAACnB,IAAIwB,WAAJ,CAAgBC,QAAhB,EAAD,CAArC,EAAmEG,MAAM,CAAC,IAAIF,IAAJ,GAAWD,QAAX,EAAD,CAAzE,EAAkGI,MAAM,CAAC5B,YAAYc,IAAb,CAAxG,EAAtB,CAAf;AACAY,iCAASG,IAAT,CAAc,UAAST,GAAT,EAAcC,MAAd,EAAsB;AAChCnB,oCAAQ,QAAR;AACH,yBAFD;AAGH;AACJ,iBAXD;AAYH;AACJ;AACJ,KA9BM,CAAP;AA+BH,CAhCD;;kBAkCe;AACXJ;AADW,C","file":"userActivity.js","sourcesContent":["import constant from \"../models/constant\";\nimport _ from \"lodash\";\n\nconst userActivityLogs = (req, response) => {\n    return new Promise((resolve, reject) => {\n        if (!req.user) {\n            resolve()\n        } else {\n            let api_log_record = true\n            _.forEach(constant().ignored_api_log_list, (val, key) => {\n                if (req.path.match(new RegExp(val, 'gi'))) {\n                    api_log_record = false\n                }\n                if (key == constant().ignored_api_log_list.length - 1 && !api_log_record) {\n                    resolve()\n                }\n            })\n            if (api_log_record) {\n                let data = response;\n                response = response.data ? response.data : response.dataValues;\n                req.user_activity.findOne({ email: req.user.email }).exec(function(err, result) {\n                    if (result) {\n                        req.user_activity.update({ \"email\": req.user.email }, { \"$push\": { \"action\": req.originalUrl.toString(), \"time\": new Date().toString(), \"json\": response || data} }).exec(function(err, result) {\n                            resolve(\"sucess\")\n                        })\n                    } else {\n                        var activity = new req.user_activity({ \"email\": req.user.email, \"action\": [req.originalUrl.toString()], time: [new Date().toString()], json: [response || data] })\n                        activity.save(function(err, result) {\n                            resolve(\"sucess\")\n                        })\n                    }\n                })\n            }\n        }\n    })\n}\n\nexport default {\n    userActivityLogs\n}"]}