{"version":3,"sources":["../src/db.js"],"names":["db","sequelize","name","username","password","port","host","Object","keys","forEach","modelName","model","DataTypes","options","associate","sync","then","User","findAll","response","length","create","email","user_type","Tag","findOne","where","type","tagType","default","title","id","color","default_id","SystemVariable","variableCode","err","console","log","process","exit","assign","Sequelize"],"mappings":"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","file":"db.js","sourcesContent":["import Sequelize from \"sequelize\";\nimport models from \"./models\";\nimport constant from \"./models/constant\";\nimport config from \"./config\";\nimport migration from \"../migrations/index.js\"\nconst db = {};\n\n// create your instance of sequelize\nconst sequelize = new Sequelize(config.db.name, config.db.username, config.db.password, { port: 3306, host: config.db.host });\n\n// load models\nObject.keys(models).forEach((modelName) => {\n    const model = models[modelName](sequelize, Sequelize.DataTypes);\n    db[modelName] = model;\n});\n\n// invoke associations on each of the models\nObject.keys(db).forEach((modelName) => {\n    if (db[modelName].options.associate) {\n        db[modelName].options.associate(db);\n    }\n});\n\nsequelize.sync().then(() => {\n    db.User.findAll().then((response)=>{\n        if(!response.length){\n            db.User.create({ email: \"123@gmail.com\", password: \"pmWkWSBCL51Bfkhn79xPuKBKHz//H6B+mY6G9/eieuM=\", user_type: \"Admin\" })\n        }\n    })\n\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Shortlist\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Shortlist\", type: constant().tagType.default, color: \"#cb891b\", default_id: 2 });\n            }\n        });\n\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Reject\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Reject\", type: constant().tagType.default, color: \"#ef2e46\", default_id: 6 });\n            }\n        });\n\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"First Round\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"First Round\", type: constant().tagType.default, color: \"#ba21d3\", default_id: 3 });\n            }\n        });\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Second Round\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Second Round\", type: constant().tagType.default, color: \"#ba21d3\", default_id: 4 });\n            }\n        });\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Third Round\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Third Round\", type: constant().tagType.default, color: \"#ba21d3\", default_id: 5 });\n            }\n        });\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Genuine Applicant\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Genuine Applicant\", type: constant().tagType.default, color: \"#cb891b\", default_id: 1 });\n            }\n        });\n\n    db.Tag.findOne({ where: { type: constant().tagType.default, title: \"Selected\" } })\n        .then((id) => {\n            if (!id) {\n                db.Tag.create({ title: \"Selected\", type: constant().tagType.default, color: \"#ef2f50\", default_id: 7 });\n            }\n        });\n    db.SystemVariable.findOne({ where: { variableCode: \"#date\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#date\" });\n            }\n        });\n\n    db.SystemVariable.findOne({ where: { variableCode: \"#candidate_name\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#candidate_name\" });\n            }\n        });\n\n    db.SystemVariable.findOne({ where: { variableCode: \"#page_break\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#page_break\" });\n            }\n        });\n    db.SystemVariable.findOne({ where: { variableCode: \"#logo\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#logo\" });\n            }\n        });\n    db.SystemVariable.findOne({ where: { variableCode: \"#scheduled_date\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#scheduled_date\" });\n            }\n        });\n    db.SystemVariable.findOne({ where: { variableCode: \"#scheduled_time\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#scheduled_time\" });\n            }\n        });\n    db.SystemVariable.findOne({ where: { variableCode: \"#tag_name\" } })\n        .then((id) => {\n            if (!id) {\n                db.SystemVariable.create({ variableCode: \"#tag_name\" });\n            }\n        });\n}, (err) => {\n    console.log(err)\n    console.log(\"Incorrect Sequelize Db Details Update config details\");\n    process.exit(0)\n});\n\nexport default Object.assign({}, db, {\n    sequelize,\n    Sequelize\n});"]}