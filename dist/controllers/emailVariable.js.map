{"version":3,"sources":["../../src/controllers/emailVariable.js"],"names":["VariableController","create","req","res","next","save","_db","checkBody","body","getValidationResult","then","variable","Variable","data","handleSuccessResponse","catch","handleErrorResponse","bind","update","where","id","params","variableId","docs","status","deleteVariable","destroy","variableList","findAll","offset","page","parseInt","limit","order","idResult","getById","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEaA,kB,WAAAA,kB;;;;;;;;;;;;;;kNAGTC,M,GAAS,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzB,4CAAiBC,IAAjB,CAAsB,MAAKC,GAA3B,EAAgCJ,IAAIK,SAApC,EAA+CL,IAAIM,IAAnD,EAAyDN,IAAIO,mBAAJ,EAAzD,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAChB,sBAAKL,GAAL,CAASM,QAAT,CAAkBX,MAAlB,CAAyBU,QAAzB,EACKD,IADL,CACU,UAACG,IAAD;AAAA,2BAAU,MAAKC,qBAAL,CAA2BZ,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CS,IAA3C,CAAV;AAAA,iBADV;AAEH,aAJL,EAIOE,KAJP,CAIa,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCd,GAApC,CAJb;AAKH,S,QAGDe,M,GAAS,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzB,4CAAiBC,IAAjB,CAAsB,MAAKC,GAA3B,EAAgCJ,IAAIK,SAApC,EAA+CL,IAAIM,IAAnD,EAAyDN,IAAIO,mBAAJ,EAAzD,EACKC,IADL,CACU,UAACG,IAAD,EAAU;AACZ,sBAAKP,GAAL,CAASM,QAAT,CAAkBM,MAAlB,CAAyBL,IAAzB,EAA+B;AACvBM,2BAAO;AACHC,4BAAIlB,IAAImB,MAAJ,CAAWC;AADZ;AADgB,iBAA/B,EAKKZ,IALL,CAKU,UAACa,IAAD,EAAU;AACZ,0BAAKT,qBAAL,CAA2BZ,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEoB,QAAQ,SAAV,EAA3C;AACH,iBAPL;AAQH,aAVL,EAUOT,KAVP,CAUa,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCd,GAApC,CAVb;AAWH,S,QAKDsB,c,GAAiB,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,kBAAKE,GAAL,CAASM,QAAT,CAAkBc,OAAlB,CAA0B;AAClBP,uBAAO;AACHC,wBAAIlB,IAAImB,MAAJ,CAAWC;AADZ;AADW,aAA1B,EAKKZ,IALL,CAKU,UAACa,IAAD,EAAU;AACZ,sBAAKT,qBAAL,CAA2BZ,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEoB,QAAQ,SAAV,EAA3C;AACH,aAPL,EAOOT,KAPP,CAOa,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCd,GAApC,CAPb;AAQH,S,QAGDwB,Y,GAAe,UAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,kBAAKE,GAAL,CAASM,QAAT,CAAkBgB,OAAlB,CAA0B;AAClBC,wBAAQ,CAAC3B,IAAImB,MAAJ,CAAWS,IAAX,GAAkB,CAAnB,IAAwBC,SAAS7B,IAAImB,MAAJ,CAAWW,KAApB,CADd;AAElBA,uBAAOD,SAAS7B,IAAImB,MAAJ,CAAWW,KAApB,CAFW;AAGlBC,uBAAO;AAHW,aAA1B,EAKKvB,IALL,CAKU,UAACG,IAAD;AAAA,uBAAU,MAAKC,qBAAL,CAA2BZ,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CS,IAA3C,CAAV;AAAA,aALV,EAMKE,KANL,CAMW,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCd,GAApC,CANX;AAOH,S,QAID+B,Q,GAAW,UAAChC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBkB,UAAjB,EAAgC;AACvC,kBAAKa,OAAL,CAAajC,GAAb,EAAkBC,GAAlB,EAAuB,MAAKG,GAAL,CAASM,QAAhC,EAA0CU,UAA1C,EAAsDlB,IAAtD;AACH,S;;;AArDD;;;AASA;;;AAiBA;;;AAYA;;;AAYA;;;;;;AAOJ,IAAMgC,aAAa,IAAIpC,kBAAJ,EAAnB;kBACeoC,U","file":"emailVariable.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport VariableProvider from \"../providers/EmailVariableProvider.js\";\n\nexport class VariableController extends BaseAPIController {\n\n    /* Controller for User Register  */\n    create = (req, res, next) => {\n        VariableProvider.save(this._db, req.checkBody, req.body, req.getValidationResult())\n            .then((variable) => {\n                this._db.Variable.create(variable)\n                    .then((data) => this.handleSuccessResponse(req, res, next, data))\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Template Update */\n    update = (req, res, next) => {\n        VariableProvider.save(this._db, req.checkBody, req.body, req.getValidationResult())\n            .then((data) => {\n                this._db.Variable.update(data, {\n                        where: {\n                            id: req.params.variableId\n                        }\n                    })\n                    .then((docs) => {\n                        this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n                    })\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n\n    /* Template delete */\n    deleteVariable = (req, res, next) => {\n        this._db.Variable.destroy({\n                where: {\n                    id: req.params.variableId\n                }\n            })\n            .then((docs) => {\n                this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Get List of All Templates */\n    variableList = (req, res, next) => {\n        this._db.Variable.findAll({\n                offset: (req.params.page - 1) * parseInt(req.params.limit),\n                limit: parseInt(req.params.limit),\n                order: '`id` DESC'\n            })\n            .then((data) => this.handleSuccessResponse(req, res, next, data))\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* Get Variable data using id*/\n    idResult = (req, res, next, variableId) => {\n        this.getById(req, res, this._db.Variable, variableId, next);\n    }\n\n}\n\nconst controller = new VariableController();\nexport default controller;"]}