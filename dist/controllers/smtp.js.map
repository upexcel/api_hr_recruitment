{"version":3,"sources":["../../src/controllers/smtp.js"],"names":["SmtpController","save","req","res","next","_db","Smtp","checkBody","body","getValidationResult","then","data","sendMail","email","smtp","subject","text","html","response","create","changeStatus","response_status","handleSuccessResponse","dataValues","err","Error","json","message","catch","handleErrorResponse","bind","update","where","id","params","smtpId","docs","status","deleteSmtp","destroy","getSmtp","findAll","offset","page","parseInt","limit","order","getSmtpById","result","testSmtp","idResult","getById","controller"],"mappings":"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","file":"smtp.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport SmtpProvider from \"../providers/SmtpProvider\";\nimport constant from \"../models/constant\";\nimport mail from \"../modules/mail\";\nimport _ from \"lodash\";\nimport config from \"../config\";\n\nexport class SmtpController extends BaseAPIController {\n\n    /* Controller for Save Smtp Data  */\n    save = (req, res, next) => {\n        SmtpProvider.save(this._db.Smtp, req.checkBody, req.body, req.getValidationResult())\n            .then((data) => {\n                mail.sendMail(data.email, constant().smtp.subject, constant().smtp.text, data, constant().smtp.html)\n                    .then((response) => {\n                        this._db.Smtp.create(data)\n                            .then((data) => {\n                                this._db.Smtp.changeStatus(data.email)\n                                    .then((response_status) => {\n                                        this.handleSuccessResponse(req, res, next, { response_status, data: data.dataValues })\n                                    })\n                            }, (err) => {\n                                throw new Error(res.json(400, {\n                                    message: \"Data Already Saved\"\n                                }));\n                            })\n                            .catch(this.handleErrorResponse.bind(null, res));\n                    })\n                    .catch(this.handleErrorResponse.bind(null, res));\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Smtp data Update */\n    update = (req, res, next) => {\n        SmtpProvider.save(this._db.Smtp, req.checkBody, req.body, req.getValidationResult())\n            .then((data) => {\n                this._db.Smtp.update(data, {\n                        where: {\n                            id: req.params.smtpId\n                        }\n                    })\n                    .then((docs) => {\n                        this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n                    })\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* Smtp data delete */\n    deleteSmtp = (req, res, next) => {\n        this._db.Smtp.destroy({\n                where: {\n                    id: req.params.smtpId\n                }\n            })\n            .then((docs) => {\n                this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* Get Smtp data */\n    getSmtp = (req, res, next) => {\n        this._db.Smtp.findAll({\n                offset: (req.params.page - 1) * parseInt(req.params.limit),\n                limit: parseInt(req.params.limit),\n                order: '`id` DESC'\n            })\n            .then((data) => this.handleSuccessResponse(req, res, next, data))\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* get smtp by id*/\n    getSmtpById = (req, res, next) => {\n        this.handleSuccessResponse(req, res, next, req.result);\n    }\n\n\n    /* test smtp by email*/\n    testSmtp = (req, res, next) => {\n        this._db.Smtp.testSmtp(req.params.email)\n            .then((response) => { this.handleSuccessResponse(req, res, next, response) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* change smtp status*/\n    changeStatus = (req, res, next) => {\n        this._db.Smtp.changeStatus(req.params.email)\n            .then((response) => { this.handleSuccessResponse(req, res, next, response) })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Get Smtpp data using id */\n    idResult = (req, res, next, smtpId) => {\n        this.getById(req, res, this._db.Smtp, smtpId, next);\n    }\n}\n\nconst controller = new SmtpController();\nexport default controller;"]}