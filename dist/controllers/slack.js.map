{"version":3,"sources":["../../src/controllers/slack.js"],"names":["SlackController","addInfo","req","res","next","_db","Slack","getChannelList","body","then","response","create","handleSuccessResponse","catch","handleErrorResponse","bind","update","where","id","params","account_id","status","message","getSlackData","slackData","getSlackDataByid","findOne","slack_id","data","deleteSlackInfo","destroy","controller"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;IAEaA,e,WAAAA,e;;;;;;;;;;;;;;4MAETC,O,GAAU,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,kBAAKC,GAAL,CAASC,KAAT,CAAeC,cAAf,CAA8BL,IAAIM,IAAlC,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAChB,sBAAKL,GAAL,CAASC,KAAT,CAAeK,MAAf,CAAsBT,IAAIM,IAA1B,EAAgCC,IAAhC,CAAqC,UAACC,QAAD,EAAc;AAC/C,0BAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CM,QAA3C;AACH,iBAFD;AAGH,aALL,EAKOG,KALP,CAKa,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCZ,GAApC,CALb;AAMH,S,QAYDa,M,GAAS,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzB,kBAAKC,GAAL,CAASC,KAAT,CAAeU,MAAf,CAAsBd,IAAIM,IAA1B,EAAgC,EAAES,OAAO,EAAEC,IAAIhB,IAAIiB,MAAJ,CAAWC,UAAjB,EAAT,EAAhC,EAA0EX,IAA1E,CAA+E,UAACC,QAAD,EAAc;AACzF,sBAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEiB,QAAQ,CAAV,EAAaC,SAAS,uBAAtB,EAA3C;AACH,aAFD;AAGH,S,QAGDC,Y,GAAe,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,kBAAKC,GAAL,CAASC,KAAT,CAAekB,SAAf,GAA2Bf,IAA3B,CAAgC,UAACC,QAAD,EAAc;AAC1C,sBAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CM,QAA3C;AACH,aAFD;AAGH,S,QAGDe,gB,GAAmB,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,kBAAKC,GAAL,CAASC,KAAT,CAAeoB,OAAf,CAAuB,EAAET,OAAO,EAAEC,IAAIhB,IAAIiB,MAAJ,CAAWQ,QAAjB,EAAT,EAAvB,EAA+DlB,IAA/D,CAAoE,UAACC,QAAD,EAAc;AAC9E,oBAAIA,QAAJ,EACI,MAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEwB,MAAMlB,QAAR,EAA3C,EADJ,KAGI,MAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEwB,MAAM,IAAR,EAA3C;AACP,aALD,EAKGf,KALH,CAKS,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCZ,GAApC,CALT;AAMH,S,QAGD0B,e,GAAkB,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,kBAAKC,GAAL,CAASC,KAAT,CAAewB,OAAf,CAAuB,EAAEb,OAAO,EAAEC,IAAIhB,IAAIiB,MAAJ,CAAWQ,QAAjB,EAAT,EAAvB,EAA+DlB,IAA/D,CAAoE,UAACC,QAAD,EAAc;AAC9E,sBAAKE,qBAAL,CAA2BV,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEkB,SAAS,SAAX,EAA3C;AACH,aAFD;AAGH,S;;AAhDD;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;;;AAOA;;;AAUA;;;;;;AAQJ,IAAMS,aAAa,IAAI/B,eAAJ,EAAnB;kBACe+B,U","file":"slack.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\n\nexport class SlackController extends BaseAPIController {\n    /*add info*/\n    addInfo = (req, res, next) => {\n        this._db.Slack.getChannelList(req.body)\n            .then((response) => {\n                this._db.Slack.create(req.body).then((response) => {\n                    this.handleSuccessResponse(req, res, next, response)\n                })\n            }).catch(this.handleErrorResponse.bind(null, res))\n    }\n\n    /*get channel list*/\n    // getChannelList = (req, res, next) => {\n    //     this._db.Slack.getChannelList(req.params.account_id)\n    //         .then((channelList) => {\n    //             this.handleSuccessResponse(req, res, next, channelList)\n    //         })\n    // }\n\n    /*Update SlackInfo*/\n\n    update = (req, res, next) => {\n        this._db.Slack.update(req.body, { where: { id: req.params.account_id } }).then((response) => {\n            this.handleSuccessResponse(req, res, next, { status: 1, message: \"Slack Info is Updated\" })\n        })\n    }\n\n    /*get slack data*/\n    getSlackData = (req, res, next) => {\n        this._db.Slack.slackData().then((response) => {\n            this.handleSuccessResponse(req, res, next, response)\n        })\n    }\n\n    /*get slack data by id*/\n    getSlackDataByid = (req, res, next) => {\n        this._db.Slack.findOne({ where: { id: req.params.slack_id } }).then((response) => {\n            if (response)\n                this.handleSuccessResponse(req, res, next, { data: response })\n            else\n                this.handleSuccessResponse(req, res, next, { data: null })\n        }).catch(this.handleErrorResponse.bind(null, res))\n    }\n\n    /*deleteSlackInfo*/\n    deleteSlackInfo = (req, res, next) => {\n        this._db.Slack.destroy({ where: { id: req.params.slack_id } }).then((response) => {\n            this.handleSuccessResponse(req, res, next, { message: \"success\" })\n        })\n    }\n}\n\nconst controller = new SlackController();\nexport default controller;"]}