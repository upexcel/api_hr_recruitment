{"version":3,"sources":["../../src/controllers/BaseAPIController.js"],"names":["BaseAPIController","_db","res","err","next","status","send","req","data","userActivityLogs","then","response","json","model","id","findById","result","where","email","find","count","exec"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,iB;AACjB,iCAAc;AAAA;;AACV,aAAKC,GAAL;AACH;;;;4CAEmBC,G,EAAKC,G,EAAKC,I,EAAM;AAChCF,gBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAAaH,GAAb,CAArB;AACH;;;8CAEqBI,G,EAAKL,G,EAAKE,I,EAAMI,I,EAAM;AACxC,mCAAaC,gBAAb,CAA8BF,GAA9B,EAAmCC,IAAnC,EACKE,IADL,CACU,UAACC,QAAD,EAAc;AAAET,oBAAIU,IAAJ,CAASJ,IAAT;AAAgB,aAD1C;AAEH;;;gCAEOD,G,EAAKL,G,EAAKW,K,EAAOC,E,EAAIV,I,EAAM;AAC/BS,kBAAME,QAAN,CAAeD,EAAf,EACKJ,IADL,CACU,UAACF,IAAD,EAAU;AACZ,oBAAIA,IAAJ,EAAU;AACND,wBAAIS,MAAJ,GAAaR,IAAb;AACAJ;AACH,iBAHD,MAGO;AACHF,wBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAAa,YAAb,CAArB;AACH;AACJ,aARL;AASH;;;iCAEQC,G,EAAKL,G,EAAKE,I,EAAMa,K,EAAO;AAC5BV,gBAAIW,KAAJ,CAAUC,IAAV,CAAeF,KAAf,EAAsBG,KAAtB,GAA8BC,IAA9B,CAAmC,UAAClB,GAAD,EAAMK,IAAN,EAAe;AAC9C,oBAAIL,GAAJ,EAAS;AACLC,yBAAKD,GAAL;AACH,iBAFD,MAEO;AACHI,wBAAIa,KAAJ,GAAYZ,IAAZ;AACAJ;AACH;AACJ,aAPD;AAQH;;;;;;kBAnCgBJ,iB","file":"BaseAPIController.js","sourcesContent":["import db from \"../db\";\nimport errorHandler from \"../lib/util\";\nimport userActivity from \"../service/userActivity\";\n\nexport default class BaseAPIController {\n    constructor() {\n        this._db = db;\n    }\n\n    handleErrorResponse(res, err, next) {\n        res.status(400).send(errorHandler(err));\n    }\n\n    handleSuccessResponse(req, res, next, data) {\n        userActivity.userActivityLogs(req, data)\n            .then((response) => { res.json(data) })\n    }\n\n    getById(req, res, model, id, next) {\n        model.findById(id)\n            .then((data) => {\n                if (data) {\n                    req.result = data;\n                    next();\n                } else {\n                    res.status(400).send(errorHandler(\"Invalid Id\"));\n                }\n            });\n    }\n\n    getCount(req, res, next, where) {\n        req.email.find(where).count().exec((err, data) => {\n            if (err) {\n                next(err);\n            } else {\n                req.count = data\n                next()\n            }\n        });\n    }\n}"]}