{"version":3,"sources":["../../src/controllers/template.js"],"names":["TemplateController","create","req","res","next","save","_db","checkBody","body","getValidationResult","then","template","Template","data","handleSuccessResponse","catch","handleErrorResponse","bind","update","where","id","params","templateId","docs","status","deleteTemplate","Tag","findOne","template_id","destroy","Error","templateList","findAll","offset","page","parseInt","limit","order","templateTest","findById","templateEmail","Smtp","is_silent","sendMail","email","subject","smtp","text","response","emailLog","email_status","message","idResult","getById","getTemplateById","controller"],"mappings":"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","file":"template.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport TemplateProvider from \"../providers/TemplateProvider.js\";\nimport replace from \"../modules/replaceVariable\";\nimport constant from \"../models/constant\";\nimport mail from \"../modules/mail\";\nimport db from \"../db\";\nimport config from \"../config\";\nimport logs from \"../service/emaillogs\";\n\nexport class TemplateController extends BaseAPIController {\n\n    /* Controller for User Register  */\n    create = (req, res, next) => {\n        TemplateProvider.save(this._db, req.checkBody, req.body, req.getValidationResult())\n            .then((template) => {\n                this._db.Template.create(template)\n                    .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Template Update */\n    update = (req, res, next) => {\n        TemplateProvider.save(this._db, req.checkBody, req.body, req.getValidationResult())\n            .then((data) => {\n                this._db.Template.update(data, {\n                        where: {\n                            id: req.params.templateId\n                        }\n                    })\n                    .then((docs) => {\n                        this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n                    })\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* Template delete */\n    deleteTemplate = (req, res, next) => {\n        db.Tag.findOne({ where: { template_id: req.params.templateId } })\n            .then((data) => {\n                if (!data) {\n                    this._db.Template.destroy({\n                            where: {\n                                id: req.params.templateId\n                            }\n                        })\n                        .then((docs) => {\n                            this.handleSuccessResponse(req, res, next, { status: \"SUCCESS\" });\n                        }).catch(this.handleErrorResponse.bind(null, res));\n                } else {\n                    throw new Error(\"Template is Assigned to Tag\")\n                }\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Get List of All Templates */\n    templateList = (req, res, next) => {\n        this._db.Template.findAll({\n                offset: (req.params.page - 1) * parseInt(req.params.limit),\n                limit: parseInt(req.params.limit),\n                order: '`id` DESC'\n            })\n            .then((data) => this.handleSuccessResponse(req, res, next, data))\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n\n    /* Template  Test */\n    templateTest = (req, res, next) => {\n        this._db.Template.findById(req.params.templateId)\n            .then((data) => {\n                replace.templateTest(data.body)\n                    .then((data) => { this.handleSuccessResponse(req, res, next, data) })\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Send Email */\n    templateEmail = (req, res, next) => {\n        TemplateProvider.templateEmail(this._db, req.checkBody, req.body, req.getValidationResult())\n            .then((template) => {\n                this._db.Smtp.findOne({ where: { status: true } })\n                    .then((data) => {\n                        if (data) {\n                            if (config.is_silent) {\n                                mail.sendMail(req.params.email, template.subject, constant().smtp.text, data, template.body)\n                                    .then((response) => {\n                                        logs.emailLog(req, data.email_status)\n                                            .then((response) => {\n                                                this.handleSuccessResponse(req, res, next, response)\n                                            })\n                                    })\n                            } else {\n                                this.handleSuccessResponse(req, res, next, { message: \"Tempelte Tested\" })\n                            }\n\n                        } else {\n                            throw new Error(\"Not Active Smtp Email is found\")\n                        }\n                    })\n                    .catch(this.handleErrorResponse.bind(null, res));\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /* Get Variable data using id*/\n    idResult = (req, res, next, templateId) => {\n        this.getById(req, res, this._db.Template, templateId, next);\n    }\n\n    getTemplateById = (req, res, next) => {\n        this._db.Template.findById(parseInt(req.params.templateId)).then((response) => {\n            this.handleSuccessResponse(req, res, next, response)\n        })\n    }\n}\n\n\nconst controller = new TemplateController();\nexport default controller;"]}