{"version":3,"sources":["../../src/controllers/account.js"],"names":["AccountController","forgot_password","req","res","next","_db","User","findOne","where","email","params","then","user","forgotPassword","response","handleSuccessResponse","err","status","send","message","catch","handleErrorResponse","bind","update_password","updatePassword","checkBody","body","getValidationResult","update","password","new_password","id","old_password","console","log","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEaA,iB,WAAAA,iB;;;;;;;;;;;;;;gNAETC,e,GAAkB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,kBAAKC,GAAL,CAASC,IAAT,CAAcC,OAAd,CAAsB,EAAEC,OAAO,EAAEC,OAAOP,IAAIQ,MAAJ,CAAWD,KAApB,EAAT,EAAtB,EACKE,IADL,CACU,UAACC,IAAD,EAAU;AACZ,oBAAIA,IAAJ,EAAU;AACN,0BAAKP,GAAL,CAASC,IAAT,CAAcO,cAAd,CAA6BX,IAAIQ,MAAJ,CAAWD,KAAxC,EACKE,IADL,CACU,UAACG,QAAD,EAAc;AAChB,8BAAKC,qBAAL,CAA2Bb,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CU,QAA3C;AACH,qBAHL,EAGO,UAACE,GAAD,EAAS;AACRZ,6BAAKD,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB,CAAL;AACH,qBALL;AAMH,iBAPD,MAOO;AACH,0BAAKD,qBAAL,CAA2Bb,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEe,SAAS,6DAAX,EAA3C;AACH;AACJ,aAZL,EAaKC,KAbL,CAaW,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCnB,GAApC,CAbX;AAcH,S,QAGDoB,e,GAAkB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,sCAAgBoB,cAAhB,CAA+BtB,IAAIuB,SAAnC,EAA8CvB,IAAIwB,IAAlD,EAAwDxB,IAAIyB,mBAAJ,EAAxD,EACKhB,IADL,CACU,UAACe,IAAD,EAAU;AACZ,sBAAKrB,GAAL,CAASC,IAAT,CAAcsB,MAAd,CAAqB,EAAEC,UAAUH,KAAKI,YAAjB,EAArB,EAAsD,EAAEtB,OAAO,EAAEuB,IAAI7B,IAAIU,IAAJ,CAASmB,EAAf,EAAmBF,UAAUH,KAAKM,YAAlC,EAAT,EAAtD,EACKrB,IADL,CACU,UAACC,IAAD,EAAU;AACZqB,4BAAQC,GAAR,CAAYtB,IAAZ;AACA,wBAAIA,QAAQA,KAAK,CAAL,CAAZ,EAAqB;AACjB,8BAAKG,qBAAL,CAA2Bb,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C,EAAEe,SAAS,+BAAX,EAA3C;AACH,qBAFD,MAEO;AACHf,6BAAKD,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,wBAAX,EAArB,CAAL;AACH;AACJ,iBARL,EAQO,UAACH,GAAD,EAAS;AACR,0BAAKK,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCN,GAApC;AACH,iBAVL;AAWH,aAbL,EAaOI,KAbP,CAaa,MAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCnB,GAApC,CAbb;AAcH,S;;AAlCD;;;AAkBA;;;;;;AAmBJ,IAAMgC,aAAa,IAAInC,iBAAJ,EAAnB;kBACemC,U","file":"account.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport AccountProvider from \"../providers/AccountProvider\";\n\nexport class AccountController extends BaseAPIController {\n    /*forgot password*/\n    forgot_password = (req, res, next) => {\n        this._db.User.findOne({ where: { email: req.params.email } })\n            .then((user) => {\n                if (user) {\n                    this._db.User.forgotPassword(req.params.email)\n                        .then((response) => {\n                            this.handleSuccessResponse(req, res, next, response)\n                        }, (err) => {\n                            next(res.status(400).send({ message: err }))\n                        })\n                } else {\n                    this.handleSuccessResponse(req, res, next, { message: \"If email exists, new password will be send to your email !!\" })\n                }\n            })\n            .catch(this.handleErrorResponse.bind(null, res));\n    }\n\n    /*update password*/\n    update_password = (req, res, next) => {\n        AccountProvider.updatePassword(req.checkBody, req.body, req.getValidationResult())\n            .then((body) => {\n                this._db.User.update({ password: body.new_password }, { where: { id: req.user.id, password: body.old_password } })\n                    .then((user) => {\n                        console.log(user)\n                        if (user && user[0]) {\n                            this.handleSuccessResponse(req, res, next, { message: 'password updated successfully' });\n                        } else {\n                            next(res.status(400).send({ message: \"Incorrect Old password\" }))\n                        }\n                    }, (err) => {\n                        this.handleErrorResponse.bind(null, err)\n                    })\n            }).catch(this.handleErrorResponse.bind(null, res));\n    }\n}\n\nconst controller = new AccountController();\nexport default controller;"]}