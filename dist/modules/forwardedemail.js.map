{"version":3,"sources":["../../src/modules/forwardedemail.js"],"names":["module","exports","findEmail","mail","Promise","resolve","reject","from","to","sender_mail","date","email_date","email_timestamp","subject","value","name","address","Date","getTime","substring","slice","email_ids","text","match","fwdedFrom","split","data"],"mappings":";;AAAA;;;;;;AACAA,OAAOC,OAAP,GAAiB;AACbC,eAAW,mBAASC,IAAT,EAAe;AACtB,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAIC,aAAJ;AAAA,gBAAUC,WAAV;AAAA,gBAAcC,oBAAd;AAAA,gBAA2BC,aAA3B;AAAA,gBAAiCC,mBAAjC;AAAA,gBAA6CC,wBAA7C;AAAA,gBAA8DC,gBAA9D;AACAN,mBAAOJ,KAAKI,IAAL,CAAUO,KAAV,CAAgB,CAAhB,EAAmBC,IAA1B;AACAP,iBAAKL,KAAKK,EAAL,CAAQM,KAAR,CAAc,CAAd,EAAiBE,OAAtB;AACAN,mBAAOP,KAAKO,IAAZ;AACAC,yBAAaR,KAAKO,IAAlB;AACAE,8BAAkB,IAAIK,IAAJ,CAASd,KAAKO,IAAd,EAAoBQ,OAApB,EAAlB;AACAL,sBAAUV,KAAKU,OAAf;AACA,gBAAMV,KAAKU,OAAN,CAAeM,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,KAAkC,KAAnC,IAA+ChB,KAAKI,IAAL,CAAUO,KAAV,CAAgB,CAAhB,EAAmBE,OAApB,CAA6BI,KAA7B,CAAmC,CAAC,EAApC,KAA2C,4BAA7F,EAA4H;AACxH,oBAAIC,YAAYlB,KAAKmB,IAAL,CAAUC,KAAV,CAAgB,sDAAhB,CAAhB;AACA,oBAAIC,YAAYrB,KAAKmB,IAAL,CAAUG,KAAV,CAAgB,IAAhB,CAAhB;AACA,oBAAIV,OAASS,UAAU,CAAV,EAAaC,KAAb,CAAoBD,UAAU,CAAV,EAAaC,KAAb,CAAmB,GAAnB,CAAD,CAA0B,CAA1B,IAA+B,GAAlD,CAAD,CAAyD,CAAzD,EAA4DA,KAA5D,CAAkE,MAAM,GAAN,GAAYJ,UAAU,CAAV,CAAZ,GAA2B,GAA7F,CAAD,CAAoG,CAApG,CAAX;AACAZ,8BAAcY,UAAU,CAAV,CAAd;AACA,oBAAIK,OAAO;AACPnB,0BAAMQ,IADC;AAEPP,wBAAIA,EAFG;AAGPC,iCAAaA,WAHN;AAIPC,0BAAMA,IAJC;AAKPC,gCAAYA,UALL;AAMPC,qCAAiBA,eANV;AAOPC,6BAASA;AAPF,iBAAX;AASAR,wBAAQqB,IAAR;AACH,aAfD,MAeO;AACHjB,8BAAcN,KAAKI,IAAL,CAAUO,KAAV,CAAgB,CAAhB,EAAmBE,OAAjC;AACA,oBAAIU,QAAO;AACPnB,0BAAMA,IADC;AAEPC,wBAAIA,EAFG;AAGPC,iCAAaA,WAHN;AAIPC,0BAAMA,IAJC;AAKPC,gCAAYA,UALL;AAMPC,qCAAiBA,eANV;AAOPC,6BAASA;AAPF,iBAAX;AASAR,wBAAQqB,KAAR;AACH;AACJ,SApCM,CAAP;AAqCH;AAvCY,CAAjB","file":"forwardedemail.js","sourcesContent":["import _ from \"lodash\";\nmodule.exports = {\n    findEmail: function(mail) {\n        return new Promise((resolve, reject) => {\n            let from, to, sender_mail, date, email_date, email_timestamp, subject;\n            from = mail.from.value[0].name;\n            to = mail.to.value[0].address;\n            date = mail.date\n            email_date = mail.date\n            email_timestamp = new Date(mail.date).getTime()\n            subject = mail.subject;\n            if (((mail.subject).substring(0, 3) == \"Fwd\") && ((mail.from.value[0].address).slice(-26) == \"@excellencetechnologies.in\")) {\n                let email_ids = mail.text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi)\n                let fwdedFrom = mail.text.split(\"\\n\");\n                let name = ((fwdedFrom[1].split((fwdedFrom[1].split(\" \"))[0] + \" \"))[1].split(\" \" + \"<\" + email_ids[0] + \">\"))[0];\n                sender_mail = email_ids[0]\n                let data = {\n                    from: name,\n                    to: to,\n                    sender_mail: sender_mail,\n                    date: date,\n                    email_date: email_date,\n                    email_timestamp: email_timestamp,\n                    subject: subject\n                }\n                resolve(data)\n            } else {\n                sender_mail = mail.from.value[0].address;\n                let data = {\n                    from: from,\n                    to: to,\n                    sender_mail: sender_mail,\n                    date: date,\n                    email_date: email_date,\n                    email_timestamp: email_timestamp,\n                    subject: subject\n                }\n                resolve(data)\n            }\n        });\n    }\n}"]}