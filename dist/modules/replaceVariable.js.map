{"version":3,"sources":["../../src/modules/replaceVariable.js"],"names":["date","Date","getDate","getMonth","getFullYear","module","exports","filter","body","name","tagId","Promise","resolve","reject","Tag","findOne","where","id","then","tag","Variable","findAll","data","forEach","val","key","replaceAll","find","replace","RegExp","variableCode","variableValue","title","res","schedule_filter","scheduled_date","scheduled_time","templateTest"],"mappings":"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","file":"replaceVariable.js","sourcesContent":["import db from \"../db\";\nimport _ from \"lodash\";\nlet date = new Date().getDate() + \"-\" + (new Date().getMonth() + 1) + \"-\" + new Date().getFullYear();\n\nmodule.exports = {\n    filter: function(body, name, tagId) {\n        return new Promise((resolve, reject) => {\n            db.Tag.findOne({ where: { id: tagId } })\n                .then((tag) => {\n                    if (tag) {\n                        db.Variable.findAll({})\n                            .then((data) => {\n                                _.forEach(data, (val, key) => {\n                                    function replaceAll(body, find, replace) {\n                                        return body.replace(new RegExp(find, 'gi'), replace);\n                                    }\n                                    body = replaceAll(body, val.variableCode, val.variableValue)\n                                })\n\n                                function replaceAll(body, find, replace) {\n                                    return body.replace(new RegExp(find, 'gi'), replace);\n                                }\n                                body = replaceAll(body, \"#tag_name\", tag.title);\n                                let res = body.replace(\"#candidate_name\", name).replace(\"#date\", date);\n                                resolve(res);\n\n                            })\n                    } else {\n                        db.Variable.findAll({})\n                            .then((data) => {\n                                _.forEach(data, (val, key) => {\n                                    function replaceAll(body, find, replace) {\n                                        return body.replace(new RegExp(find, 'gi'), replace);\n                                    }\n                                    body = replaceAll(body, val.variableCode, val.variableValue)\n                                })\n\n                                function replaceAll(body, find, replace) {\n                                    return body.replace(new RegExp(find, 'gi'), replace);\n                                }\n                                let res = body.replace(\"#candidate_name\", name).replace(\"#date\", date);\n                                resolve(res);\n\n                            })\n                    }\n                })\n        })\n    },\n    schedule_filter: function(body, name, tagId,scheduled_date,scheduled_time) {\n        return new Promise((resolve, reject) => {\n            db.Tag.findOne({ where: { id: tagId } })\n                .then((tag) => {\n                    if (tag) {\n                        db.Variable.findAll({})\n                            .then((data) => {\n                                _.forEach(data, (val, key) => {\n                                    function replaceAll(body, find, replace) {\n                                        return body.replace(new RegExp(find, 'gi'), replace);\n                                    }\n                                    body = replaceAll(body, val.variableCode, val.variableValue)\n                                })\n\n                                function replaceAll(body, find, replace) {\n                                    return body.replace(new RegExp(find, 'gi'), replace);\n                                }\n                                body = replaceAll(body, \"#tag_name\", tag.title);\n                                let res = body.replace(\"#candidate_name\", name).replace(\"#date\", date).replace(\"#scheduled_date\", scheduled_date).replace(\"#scheduled_time\", scheduled_time);\n                                resolve(res);\n\n                            })\n                    } else {\n                        db.Variable.findAll({})\n                            .then((data) => {\n                                _.forEach(data, (val, key) => {\n                                    function replaceAll(body, find, replace) {\n                                        return body.replace(new RegExp(find, 'gi'), replace);\n                                    }\n                                    body = replaceAll(body, val.variableCode, val.variableValue)\n                                })\n\n                                function replaceAll(body, find, replace) {\n                                    return body.replace(new RegExp(find, 'gi'), replace);\n                                }\n                                let res = body.replace(\"#candidate_name\", name).replace(\"#date\", date);\n                                resolve(res);\n\n                            })\n                    }\n                })\n        })\n    },\n    templateTest: function(body) {\n        return new Promise((resolve, reject) => {\n            db.Variable.findAll({})\n                .then((data) => {\n                    _.forEach(data, (val, key) => {\n                        function replaceAll(body, find, replace) {\n                            return body.replace(new RegExp(find, 'gi'), replace);\n                        }\n                        body = replaceAll(body, val.variableCode, val.variableValue)\n                    })\n                    let res = body.replace(\"#date\", date);\n                    resolve(res);\n\n                })\n        })\n\n    }\n};"]}