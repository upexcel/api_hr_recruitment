{"version":3,"sources":["../src/index.js"],"names":["app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","urlencoded","extended","initRoutes","cwd","resolve","err","routes","console","log","red","forEach","routePath","require","default","green","length","listen","process","env","PORT","port","address"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ,C,CAbA;;AAcAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAH,IAAIG,GAAJ,CAAQ,qBAAR;AACAH,IAAIG,GAAJ,CAAQ,mBAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB,iBAAOC;AADd,CAAL,CAAR;AAGAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;AAGAR,IAAIG,GAAJ,CAAQ,qBAAWM,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGAV,IAAIG,GAAJ,CAAQ,iCAAR;AACA,IAAMQ,aAAa,SAAbA,UAAa,CAACX,GAAD,EAAS;AACxB;AACA,wBAAK,eAAL,EAAsB;AAClBY,aAAK,eAAKC,OAAL,CAAa,OAAb;AADa,KAAtB,EAEG,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAID,GAAJ,EAAS;AACLE,oBAAQC,GAAR,CAAY,gBAAMC,GAAN,CAAU,gCAAV,CAAZ;AACA;AACH;AACDH,eAAOI,OAAP,CAAe,UAACC,SAAD,EAAe;AAC1BC,oBAAQD,SAAR,EAAmBE,OAAnB,CAA2BtB,GAA3B,EAD0B,CACO;AACpC,SAFD;AAGAgB,gBAAQC,GAAR,CAAY,gBAAMM,KAAN,CAAY,cAAcR,OAAOS,MAArB,GAA8B,cAA1C,CAAZ;AACH,KAXD;AAYH,CAdD;;AAgBAb,WAAWX,GAAX;AACAA,IAAIyB,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAAtC;AACAb,QAAQC,GAAR,CAAY,qBAAqBjB,IAAIC,MAAJ,CAAW6B,OAAX,GAAqBD,IAAtD;kBACe7B,G","file":"index.js","sourcesContent":["/* eslint-disable*/\nimport http from \"http\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport morgan from \"morgan\";\nimport path from \"path\";\nimport glob from \"glob\";\nimport chalk from \"chalk\";\nimport db from \"./mongodb/db.js\";\nimport bodyParser from \"body-parser\";\nimport config from \"./config.js\";\nimport expressValidator from \"express-validator\";\n\nconst app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan(\"dev\"));\napp.use(cors());\napp.use(db());\n\n// 3rd party middleware\napp.use(cors({\n    exposedHeaders: config.corsHeaders\n}));\napp.use(bodyParser.json({\n    limit: config.bodyLimit\n}));\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(expressValidator());\nconst initRoutes = (app) => {\n    // including all routes\n    glob(\"./routes/*.js\", {\n        cwd: path.resolve(\"./src\")\n    }, (err, routes) => {\n        if (err) {\n            console.log(chalk.red(\"Error occured including routes\"));\n            return;\n        }\n        routes.forEach((routePath) => {\n            require(routePath).default(app); // eslint-disable-line\n        });\n        console.log(chalk.green(\"included \" + routes.length + \" route files\"));\n    });\n};\n\ninitRoutes(app);\napp.listen(process.env.PORT || config.port);\nconsole.log(\"Started on port \" + app.server.address().port);\nexport default app;"]}